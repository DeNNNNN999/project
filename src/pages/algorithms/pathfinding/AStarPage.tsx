import React, { useState, useCallback, useMemo, useRef, useEffect } from 'react';
import { motion, AnimatePresence } from 'motion/react';
import { Icon } from '@iconify/react';

import AlgorithmLayout from '../../../components/Layout/AlgorithmLayout/AlgorithmLayout';
import { getRelatedAlgorithms } from '../../../data/algorithms-data';
import { AStarModel, Node, GridSize, AlgorithmStats } from './astar.model';
import { AStarVisualizer } from './AStarVisualizer';
import { ControlPanel } from './ControlPanel';
import { StatsDisplay } from './StatsDisplay';
import { CodeImplementation } from './CodeImplementation';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const DEFAULT_GRID_SIZE: GridSize = { width: 40, height: 25 };
const DEFAULT_SPEED = 50; // ms –º–µ–∂–¥—É —à–∞–≥–∞–º–∏

// –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
const AlgorithmExplanation = () => {
  return (
    <div className="space-y-6">
      <div>
        <p className="mb-4 text-lg">
          A* (A-star) ‚Äî —ç—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ –ø—É—Ç–∏ –≤ –≥—Ä–∞—Ñ–µ, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç –∫—Ä–∞—Ç—á–∞–π—à–∏–π –ø—É—Ç—å –æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–π –≤–µ—Ä—à–∏–Ω—ã –∫ —Ü–µ–ª–µ–≤–æ–π.
          –û–Ω —è–≤–ª—è–µ—Ç—Å—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –î–µ–π–∫—Å—Ç—Ä—ã –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞.
        </p>

        <h3 className="mt-6 mb-3 text-xl font-bold text-amber-400">–ö–ª—é—á–µ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:</h3>
        <div className="space-y-4">
          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-blue-400">–§—É–Ω–∫—Ü–∏—è –æ—Ü–µ–Ω–∫–∏ f(n) = g(n) + h(n)</h4>
            <ul className="space-y-2 text-slate-300">
              <li><strong className="text-green-400">g(n)</strong> ‚Äî —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—É—Ç–∏ –æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏ –¥–æ —Ç–µ–∫—É—â–µ–π</li>
              <li><strong className="text-purple-400">h(n)</strong> ‚Äî —ç–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –æ—Ç —Ç–µ–∫—É—â–µ–π —Ç–æ—á–∫–∏ –¥–æ —Ü–µ–ª–∏</li>
              <li><strong className="text-amber-400">f(n)</strong> ‚Äî –æ–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—É—Ç–∏ —á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—É—é —Ç–æ—á–∫—É</li>
            </ul>
          </div>

          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-blue-400">–≠–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:</h4>
            <ul className="space-y-2 text-slate-300">
              <li><strong>–ú–∞–Ω—Ö—ç—Ç—Ç–µ–Ω—Å–∫–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> |x‚ÇÅ - x‚ÇÇ| + |y‚ÇÅ - y‚ÇÇ| (–¥–ª—è —Å–µ—Ç–∫–∏ —Å 4 –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏)</li>
              <li><strong>–ï–≤–∫–ª–∏–¥–æ–≤–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> ‚àö((x‚ÇÅ - x‚ÇÇ)¬≤ + (y‚ÇÅ - y‚ÇÇ)¬≤) (–¥–ª—è –ª—é–±—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π)</li>
              <li><strong>–î–∏–∞–≥–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> max(|x‚ÇÅ - x‚ÇÇ|, |y‚ÇÅ - y‚ÇÇ|) (–¥–ª—è 8 –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π)</li>
            </ul>
          </div>
        </div>
      </div>

      <div>
        <h3 className="mt-6 mb-3 text-xl font-bold text-amber-400">–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:</h3>
        <ol className="space-y-3 list-decimal list-inside">
          <li className="text-slate-300">
            <strong>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</strong> –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Ç–æ—á–∫—É –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π —Å–ø–∏—Å–æ–∫ —Å f = h (—Ç–∞–∫ –∫–∞–∫ g = 0)
          </li>
          <li className="text-slate-300">
            <strong>–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª:</strong>
            <ul className="mt-2 ml-6 space-y-1 list-disc">
              <li>–í—ã–±–∏—Ä–∞–µ–º —É–∑–µ–ª —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º f –∏–∑ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞</li>
              <li>–ï—Å–ª–∏ —ç—Ç–æ —Ü–µ–ª–µ–≤–æ–π —É–∑–µ–ª ‚Äî –ø—É—Ç—å –Ω–∞–π–¥–µ–Ω</li>
              <li>–ü–µ—Ä–µ–º–µ—â–∞–µ–º —É–∑–µ–ª –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —Å–ø–∏—Å–æ–∫</li>
              <li>–î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Å–µ–¥–∞ –≤—ã—á–∏—Å–ª—è–µ–º g, h –∏ f</li>
              <li>–î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å–µ–¥–µ–π –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º —Å–ø–∏—Å–∫–µ</li>
            </ul>
          </li>
          <li className="text-slate-300">
            <strong>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏:</strong> –ò–¥–µ–º –æ—Ç —Ü–µ–ª–∏ –∫ —Å—Ç–∞—Ä—Ç—É –ø–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–º —É–∑–ª–∞–º
          </li>
        </ol>
      </div>

      <div className="p-4 mt-6 border rounded-lg bg-amber-900/20 border-amber-800/30">
        <h4 className="mb-2 font-bold text-amber-300">‚ö° –í–∞–∂–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</h4>
        <ul className="space-y-1 text-amber-100 list-disc list-inside">
          <li>A* –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç –∫—Ä–∞—Ç—á–∞–π—à–∏–π –ø—É—Ç—å, –µ—Å–ª–∏ —ç–≤—Ä–∏—Å—Ç–∏–∫–∞ –¥–æ–ø—É—Å—Ç–∏–º–∞ (–Ω–µ –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏–≤–∞–µ—Ç)</li>
          <li>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ –î–µ–π–∫—Å—Ç—Ä—ã –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º—É –ø–æ–∏—Å–∫—É</li>
          <li>–¢—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ –ø–∞–º—è—Ç–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –∏ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Å–ø–∏—Å–∫–æ–≤</li>
          <li>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏–ª—å–Ω–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–∞—á–µ—Å—Ç–≤–∞ —ç–≤—Ä–∏—Å—Ç–∏–∫–∏</li>
        </ul>
      </div>
    </div>
  );
};

// –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
const ApplicationsSection = () => {
  return (
    <div className="space-y-6">
      <div>
        <h3 className="mb-4 text-xl font-bold text-amber-400">–û–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:</h3>
        <div className="grid gap-4 md:grid-cols-2">
          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-blue-400">üéÆ –ò–≥—Ä–æ–≤–∞—è –∏–Ω–¥—É—Å—Ç—Ä–∏—è</h4>
            <ul className="space-y-1 text-sm text-slate-300">
              <li>‚Ä¢ –ù–∞–≤–∏–≥–∞—Ü–∏—è NPC –≤ –∏–≥—Ä–∞—Ö</li>
              <li>‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤ RTS –∏–≥—Ä–∞—Ö</li>
              <li>‚Ä¢ Pathfinding –≤ RPG –∏ MOBA</li>
            </ul>
          </div>

          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-green-400">ü§ñ –†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞</h4>
            <ul className="space-y-1 text-sm text-slate-300">
              <li>‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ —Ä–æ–±–æ—Ç–æ–≤</li>
              <li>‚Ä¢ –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥—Ä–æ–Ω–æ–≤</li>
              <li>‚Ä¢ –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞</li>
            </ul>
          </div>

          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-purple-400">üó∫Ô∏è –ö–∞—Ä—Ç–æ–≥—Ä–∞—Ñ–∏—è</h4>
            <ul className="space-y-1 text-sm text-slate-300">
              <li>‚Ä¢ GPS –Ω–∞–≤–∏–≥–∞—Ü–∏—è</li>
              <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏</li>
              <li>‚Ä¢ –ì–æ—Ä–æ–¥—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</li>
            </ul>
          </div>

          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-amber-400">üß© –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á</h4>
            <ul className="space-y-1 text-sm text-slate-300">
              <li>‚Ä¢ –†–µ—à–µ–Ω–∏–µ –≥–æ–ª–æ–≤–æ–ª–æ–º–æ–∫</li>
              <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤ –ª–æ–≥–∏—Å—Ç–∏–∫–µ</li>
              <li>‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ AI —Å–∏—Å—Ç–µ–º–∞—Ö</li>
            </ul>
          </div>
        </div>
      </div>

      <div className="p-4 border rounded-lg bg-blue-900/20 border-blue-800/30">
        <h4 className="mb-3 font-bold text-blue-300">üí° –†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</h4>
        <div className="space-y-3 text-blue-100">
          <div>
            <strong>Google Maps:</strong> –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è A* –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º 
            —Ç—Ä–∞—Ñ–∏–∫–∞, —Ç–∏–ø–æ–≤ –¥–æ—Ä–æ–≥ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
          </div>
          <div>
            <strong>StarCraft II:</strong> –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π A* –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —é–Ω–∏—Ç–æ–≤ –ø–æ —Å–ª–æ–∂–Ω—ã–º –∫–∞—Ä—Ç–∞–º 
            —Å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è–º–∏ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏.
          </div>
          <div>
            <strong>Unity Navigation:</strong> –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç A* –Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –º–µ—à–∞—Ö 
            (NavMesh) –¥–ª—è 3D pathfinding.
          </div>
        </div>
      </div>

      <div className="p-4 mt-4 border rounded-lg bg-purple-900/20 border-purple-800/30">
        <h4 className="mb-2 font-bold text-purple-300">üöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏:</h4>
        <ul className="space-y-2 text-purple-100">
          <li><strong>Jump Point Search (JPS):</strong> –£—Å–∫–æ—Ä—è–µ—Ç A* –Ω–∞ –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã—Ö —Å–µ—Ç–∫–∞—Ö, –ø—Ä–æ–ø—É—Å–∫–∞—è —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–µ –ø—É—Ç–∏</li>
          <li><strong>Hierarchical A*:</strong> –†–∞–∑–±–∏–≤–∞–µ—Ç –∫–∞—Ä—Ç—É –Ω–∞ —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –Ω–∞ –±–æ–ª—å—à–∏—Ö –∫–∞—Ä—Ç–∞—Ö</li>
          <li><strong>Theta*:</strong> –ù–∞—Ö–æ–¥–∏—Ç –±–æ–ª–µ–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—É—Ç–∏, –ø–æ–∑–≤–æ–ª—è—è –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –ª—é–±–æ–π –¥–ª–∏–Ω—ã</li>
          <li><strong>D* –∏ D* Lite:</strong> –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –≤–µ—Ä—Å–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω—è—é—â–∏—Ö—Å—è –∫–∞—Ä—Ç</li>
        </ul>
      </div>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const AStarPage: React.FC = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
  const [gridSize, setGridSize] = useState<GridSize>(DEFAULT_GRID_SIZE);
  const [speed, setSpeed] = useState(DEFAULT_SPEED);
  const [isRunning, setIsRunning] = useState(false);
  const [isPaused, setIsPaused] = useState(false);
  const [stats, setStats] = useState<AlgorithmStats | null>(null);
  
  // –†–µ—Ñ –¥–ª—è –º–æ–¥–µ–ª–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
  const modelRef = useRef<AStarModel | null>(null);
  const animationRef = useRef<number | null>(null);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏
  useEffect(() => {
    modelRef.current = new AStarModel(gridSize);
    return () => {
      if (animationRef.current) {
        cancelAnimationFrame(animationRef.current);
      }
    };
  }, [gridSize]);
  
  // –ó–∞–ø—É—Å–∫ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
  const handleStart = useCallback(() => {
    if (!modelRef.current) return;
    
    setIsRunning(true);
    setIsPaused(false);
    setStats(null);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º
    const result = modelRef.current.findPath();
    
    if (result) {
      setStats(result.stats);
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—è
    } else {
      setIsRunning(false);
    }
  }, []);
  
  // –ü–∞—É–∑–∞/–≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  const handlePauseResume = useCallback(() => {
    setIsPaused(prev => !prev);
  }, []);
  
  // –°–±—Ä–æ—Å
  const handleReset = useCallback(() => {
    if (modelRef.current) {
      modelRef.current.reset();
      setIsRunning(false);
      setIsPaused(false);
      setStats(null);
    }
  }, []);
  
  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Å–µ—Ç–∫–∏
  const handleGridSizeChange = useCallback((newSize: GridSize) => {
    setGridSize(newSize);
    handleReset();
  }, [handleReset]);
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã
  const relatedAlgorithms = useMemo(() => 
    getRelatedAlgorithms('astar', 'pathfinding').map(algo => ({
      id: algo.id,
      name: algo.name,
      path: algo.path,
    })),
    []
  );

  return (
    <AlgorithmLayout
      title="A* (A-star) Pathfinding"
      description="–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ –∫—Ä–∞—Ç—á–∞–π—à–µ–≥–æ –ø—É—Ç–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏"
      complexity={{
        time: 'O(b^d)',
        space: 'O(b^d)',
        note: 'b - –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–µ—Ç–≤–ª–µ–Ω–∏—è, d - –≥–ª—É–±–∏–Ω–∞ —Ä–µ—à–µ–Ω–∏—è',
      }}
      category={{
        id: 'pathfinding',
        name: '–ü–æ–∏—Å–∫ –ø—É—Ç–∏',
        icon: 'material-symbols:route',
      }}
      relatedAlgorithms={relatedAlgorithms}
      visualization={
        <div className="space-y-6">
          {/* –í–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä */}
          <AStarVisualizer
            model={modelRef.current}
            isRunning={isRunning}
            isPaused={isPaused}
            speed={speed}
          />
          
          {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <ControlPanel
            gridSize={gridSize}
            speed={speed}
            isRunning={isRunning}
            isPaused={isPaused}
            onStart={handleStart}
            onPauseResume={handlePauseResume}
            onReset={handleReset}
            onGridSizeChange={handleGridSizeChange}
            onSpeedChange={setSpeed}
          />
          
          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <AnimatePresence>
            {stats && <StatsDisplay stats={stats} />}
          </AnimatePresence>
        </div>
      }
      implementation={<CodeImplementation />}
      explanation={<AlgorithmExplanation />}
      applications={<ApplicationsSection />}
    />
  );
};

export default AStarPage;
