import React, { memo } from 'react';
import { motion } from 'motion/react';
import { Icon } from '@iconify/react';
import { GridSize, HeuristicType } from './astar.model';

interface ControlPanelProps {
  gridSize: GridSize;
  speed: number;
  isRunning: boolean;
  isPaused: boolean;
  onStart: () => void;
  onPauseResume: () => void;
  onReset: () => void;
  onGridSizeChange: (size: GridSize) => void;
  onSpeedChange: (speed: number) => void;
}

const GRID_PRESETS = [
  { label: '–ú–∞–ª–µ–Ω—å–∫–∞—è (20x15)', value: { width: 20, height: 15 } },
  { label: '–°—Ä–µ–¥–Ω—è—è (40x25)', value: { width: 40, height: 25 } },
  { label: '–ë–æ–ª—å—à–∞—è (60x35)', value: { width: 60, height: 35 } },
  { label: '–û–≥—Ä–æ–º–Ω–∞—è (80x45)', value: { width: 80, height: 45 } },
];

const SPEED_PRESETS = [
  { label: '–û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ', value: 500 },
  { label: '–ú–µ–¥–ª–µ–Ω–Ω–æ', value: 200 },
  { label: '–ù–æ—Ä–º–∞–ª—å–Ω–æ', value: 50 },
  { label: '–ë—ã—Å—Ç—Ä–æ', value: 10 },
  { label: '–û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ', value: 1 },
];

export const ControlPanel: React.FC<ControlPanelProps> = memo(({
  gridSize,
  speed,
  isRunning,
  isPaused,
  onStart,
  onPauseResume,
  onReset,
  onGridSizeChange,
  onSpeedChange,
}) => {
  return (
    <motion.div
      className="p-6 bg-slate-800 rounded-lg space-y-6"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: 0.1 }}
    >
      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div className="flex flex-wrap gap-3 justify-center">
        <motion.button
          onClick={onStart}
          disabled={isRunning && !isPaused}
          className={`px-6 py-3 rounded-lg font-medium text-white transition-all flex items-center gap-2 ${
            isRunning && !isPaused
              ? 'bg-slate-600 cursor-not-allowed opacity-50'
              : 'bg-green-600 hover:bg-green-700 hover:scale-105'
          }`}
          whileHover={{ scale: isRunning && !isPaused ? 1 : 1.05 }}
          whileTap={{ scale: 0.95 }}
        >
          <Icon icon="mdi:play" className="w-5 h-5" />
          –ó–∞–ø—É—Å—Ç–∏—Ç—å
        </motion.button>
        
        <motion.button
          onClick={onPauseResume}
          disabled={!isRunning}
          className={`px-6 py-3 rounded-lg font-medium text-white transition-all flex items-center gap-2 ${
            !isRunning
              ? 'bg-slate-600 cursor-not-allowed opacity-50'
              : isPaused
              ? 'bg-blue-600 hover:bg-blue-700'
              : 'bg-amber-600 hover:bg-amber-700'
          }`}
          whileHover={{ scale: !isRunning ? 1 : 1.05 }}
          whileTap={{ scale: 0.95 }}
        >
          <Icon icon={isPaused ? "mdi:play" : "mdi:pause"} className="w-5 h-5" />
          {isPaused ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' : '–ü–∞—É–∑–∞'}
        </motion.button>
        
        <motion.button
          onClick={onReset}
          className="px-6 py-3 bg-red-600 hover:bg-red-700 rounded-lg font-medium text-white transition-all flex items-center gap-2"
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
        >
          <Icon icon="mdi:refresh" className="w-5 h-5" />
          –°–±—Ä–æ—Å–∏—Ç—å
        </motion.button>
      </div>
      
      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <div className="grid md:grid-cols-2 gap-6">
        {/* –†–∞–∑–º–µ—Ä —Å–µ—Ç–∫–∏ */}
        <div>
          <label className="block text-sm font-medium text-slate-300 mb-3">
            –†–∞–∑–º–µ—Ä —Å–µ—Ç–∫–∏
          </label>
          <div className="space-y-2">
            {GRID_PRESETS.map((preset, index) => (
              <button
                key={index}
                onClick={() => onGridSizeChange(preset.value)}
                disabled={isRunning}
                className={`w-full px-4 py-2 rounded-lg text-sm transition-all ${
                  gridSize.width === preset.value.width && gridSize.height === preset.value.height
                    ? 'bg-blue-600 text-white'
                    : 'bg-slate-700 text-slate-300 hover:bg-slate-600'
                } ${isRunning ? 'opacity-50 cursor-not-allowed' : ''}`}
              >
                {preset.label}
              </button>
            ))}
          </div>
          
          {/* –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ä–∞–∑–º–µ—Ä */}
          <div className="mt-3 space-y-2">
            <div className="flex gap-2">
              <div className="flex-1">
                <label className="text-xs text-slate-400">–®–∏—Ä–∏–Ω–∞</label>
                <input
                  type="number"
                  min="10"
                  max="100"
                  value={gridSize.width}
                  onChange={(e) => onGridSizeChange({ ...gridSize, width: parseInt(e.target.value) || 10 })}
                  disabled={isRunning}
                  className="w-full px-3 py-1 bg-slate-700 border border-slate-600 rounded text-white text-sm disabled:opacity-50"
                />
              </div>
              <div className="flex-1">
                <label className="text-xs text-slate-400">–í—ã—Å–æ—Ç–∞</label>
                <input
                  type="number"
                  min="10"
                  max="100"
                  value={gridSize.height}
                  onChange={(e) => onGridSizeChange({ ...gridSize, height: parseInt(e.target.value) || 10 })}
                  disabled={isRunning}
                  className="w-full px-3 py-1 bg-slate-700 border border-slate-600 rounded text-white text-sm disabled:opacity-50"
                />
              </div>
            </div>
          </div>
        </div>
        
        {/* –°–∫–æ—Ä–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ */}
        <div>
          <label className="block text-sm font-medium text-slate-300 mb-3">
            –°–∫–æ—Ä–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
          </label>
          <div className="space-y-2">
            {SPEED_PRESETS.map((preset, index) => (
              <button
                key={index}
                onClick={() => onSpeedChange(preset.value)}
                className={`w-full px-4 py-2 rounded-lg text-sm transition-all ${
                  speed === preset.value
                    ? 'bg-blue-600 text-white'
                    : 'bg-slate-700 text-slate-300 hover:bg-slate-600'
                }`}
              >
                {preset.label}
              </button>
            ))}
          </div>
          
          {/* –°–ª–∞–π–¥–µ—Ä —Å–∫–æ—Ä–æ—Å—Ç–∏ */}
          <div className="mt-4">
            <div className="flex items-center justify-between text-xs text-slate-400 mb-1">
              <span>–ú–µ–¥–ª–µ–Ω–Ω–æ</span>
              <span>{speed}ms</span>
              <span>–ë—ã—Å—Ç—Ä–æ</span>
            </div>
            <input
              type="range"
              min="1"
              max="500"
              value={500 - speed}
              onChange={(e) => onSpeedChange(500 - parseInt(e.target.value))}
              className="w-full h-2 bg-slate-700 rounded-lg appearance-none cursor-pointer slider"
            />
          </div>
        </div>
      </div>
      
      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
      <div className="p-4 bg-slate-700/50 rounded-lg">
        <h4 className="text-sm font-medium text-slate-300 mb-2">üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏:</h4>
        <ul className="text-xs text-slate-400 space-y-1">
          <li>‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Å—Ç–µ–Ω</li>
          <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–∞ –∏ —Ü–µ–ª–∏</li>
          <li>‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ª–∞–±–∏—Ä–∏–Ω—Ç –¥–ª—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø—É—Ç–µ–π</li>
          <li>‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∞</li>
        </ul>
      </div>
    </motion.div>
  );
});

ControlPanel.displayName = 'ControlPanel';
