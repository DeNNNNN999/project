import React, { useState, useCallback, useMemo, useRef, useEffect } from 'react';
import { motion, AnimatePresence } from 'motion/react';
import { Icon } from '@iconify/react';
import AlgorithmLayout from '../../../components/Layout/AlgorithmLayout/AlgorithmLayout';
import { getRelatedAlgorithms } from '../../../data/algorithms-data';
import { NewtonVisualizer } from './NewtonVisualizer';
import { FunctionInput } from './FunctionInput';
import { IterationTable } from './IterationTable';
import { CodeImplementation } from './CodeImplementation';
import { NewtonMethod, NewtonIteration, MathFunction } from './newton.model';

// –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
const PRESET_FUNCTIONS: MathFunction[] = [
  {
    id: 'polynomial',
    name: '–ü–æ–ª–∏–Ω–æ–º 3-–π —Å—Ç–µ–ø–µ–Ω–∏',
    expression: 'x^3 - 2*x - 5',
    derivative: '3*x^2 - 2',
    initialGuess: 2,
    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä —Å –æ–¥–Ω–∏–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –∫–æ—Ä–Ω–µ–º'
  },
  {
    id: 'trigonometric',
    name: '–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è',
    expression: 'cos(x) - x',
    derivative: '-sin(x) - 1',
    initialGuess: 0.5,
    description: '–¢—Ä–∞–Ω—Å—Ü–µ–Ω–¥–µ–Ω—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ'
  },
  {
    id: 'exponential',
    name: '–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è',
    expression: 'e^x - 3*x',
    derivative: 'e^x - 3',
    initialGuess: 0.5,
    description: '–£—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —ç–∫—Å–ø–æ–Ω–µ–Ω—Ç–æ–π'
  },
  {
    id: 'logarithmic',
    name: '–õ–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–∞—è',
    expression: 'log(x) + x^2 - 3',
    derivative: '1/x + 2*x',
    initialGuess: 1.5,
    description: '–ö–æ–º–±–∏–Ω–∞—Ü–∏—è –ª–æ–≥–∞—Ä–∏—Ñ–º–∞ –∏ –ø–æ–ª–∏–Ω–æ–º–∞'
  },
  {
    id: 'sqrt',
    name: '–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å',
    expression: 'sqrt(x) - x + 1',
    derivative: '1/(2*sqrt(x)) - 1',
    initialGuess: 2,
    description: '–£—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–º –∫–æ—Ä–Ω–µ–º'
  }
];

// –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
const AlgorithmExplanation = () => {
  return (
    <div className="space-y-6">
      <div>
        <p className="mb-4 text-lg">
          –ú–µ—Ç–æ–¥ –ù—å—é—Ç–æ–Ω–∞ (—Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–∫ –º–µ—Ç–æ–¥ –∫–∞—Å–∞—Ç–µ–ª—å–Ω—ã—Ö) ‚Äî —ç—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–π 
          —á–∏—Å–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∫–æ—Ä–Ω–µ–π —É—Ä–∞–≤–Ω–µ–Ω–∏—è f(x) = 0.
        </p>

        <h3 className="mt-6 mb-3 text-xl font-bold text-amber-400">–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Å–Ω–æ–≤–∞:</h3>
        <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
          <p className="mb-3 text-slate-300">
            –ú–µ—Ç–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ª–∏–Ω–µ–∞—Ä–∏–∑–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏—è. 
            –ò—Ç–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞:
          </p>
          <div className="p-4 my-4 text-center bg-slate-900 rounded-lg">
            <span className="text-2xl font-mono text-blue-400">
              x<sub>n+1</sub> = x<sub>n</sub> - f(x<sub>n</sub>) / f'(x<sub>n</sub>)
            </span>
          </div>
          <p className="text-slate-300">
            –≥–¥–µ f'(x) ‚Äî –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–∏ f(x).
          </p>
        </div>
      </div>

      <div>
        <h3 className="mt-6 mb-3 text-xl font-bold text-amber-400">–ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:</h3>
        <ol className="space-y-3 list-decimal list-inside">
          <li className="text-slate-300">
            <strong>–í—ã–±–æ—Ä –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏—è:</strong> –ù–∞—á–∏–Ω–∞–µ–º —Å —Ç–æ—á–∫–∏ x‚ÇÄ
          </li>
          <li className="text-slate-300">
            <strong>–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ–π:</strong> –í —Ç–æ—á–∫–µ (x_n, f(x_n)) —Å—Ç—Ä–æ–∏–º –∫–∞—Å–∞—Ç–µ–ª—å–Ω—É—é –∫ –≥—Ä–∞—Ñ–∏–∫—É
          </li>
          <li className="text-slate-300">
            <strong>–ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è:</strong> –ù–∞—Ö–æ–¥–∏–º —Ç–æ—á–∫—É –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ–π —Å –æ—Å—å—é X
          </li>
          <li className="text-slate-300">
            <strong>–ù–æ–≤–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ:</strong> –≠—Ç–∞ —Ç–æ—á–∫–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ–º x_{n+1}
          </li>
          <li className="text-slate-300">
            <strong>–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ:</strong> –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç—Ä–µ–±—É–µ–º–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏
          </li>
        </ol>
      </div>

      <div className="grid gap-4 md:grid-cols-2">
        <div className="p-4 border rounded-lg bg-green-900/20 border-green-800/30">
          <h4 className="mb-2 font-bold text-green-300">‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</h4>
          <ul className="space-y-1 text-sm text-green-100 list-disc list-inside">
            <li>–ö–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏</li>
            <li>–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –ø—Ä–∏ —Ö–æ—Ä–æ—à–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–º –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏</li>
            <li>–ü—Ä–æ—Å—Ç–æ—Ç–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏</li>
            <li>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –≥–ª–∞–¥–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π</li>
          </ul>
        </div>

        <div className="p-4 border rounded-lg bg-red-900/20 border-red-800/30">
          <h4 className="mb-2 font-bold text-red-300">‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:</h4>
          <ul className="space-y-1 text-sm text-red-100 list-disc list-inside">
            <li>–¢—Ä–µ–±—É–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π</li>
            <li>–ú–æ–∂–µ—Ç —Ä–∞—Å—Ö–æ–¥–∏—Ç—å—Å—è –ø—Ä–∏ –ø–ª–æ—Ö–æ–º –Ω–∞—á–∞–ª—å–Ω–æ–º –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏</li>
            <li>–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ç–æ—á–∫–∞–º —Å f'(x) ‚âà 0</li>
            <li>–ù–∞—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∫–æ—Ä–µ–Ω—å –∑–∞ —Ä–∞–∑</li>
          </ul>
        </div>
      </div>

      <div className="p-4 mt-6 border rounded-lg bg-amber-900/20 border-amber-800/30">
        <h4 className="mb-2 font-bold text-amber-300">‚ö° –£—Å–ª–æ–≤–∏—è —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏:</h4>
        <p className="text-amber-100">
          –ú–µ—Ç–æ–¥ –ù—å—é—Ç–æ–Ω–∞ —Å—Ö–æ–¥–∏—Ç—Å—è, –µ—Å–ª–∏:
        </p>
        <ul className="mt-2 space-y-1 text-amber-100 list-disc list-inside">
          <li>f(x) –¥–≤–∞–∂–¥—ã –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä—É–µ–º–∞ –≤ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∫–æ—Ä–Ω—è</li>
          <li>f'(x) ‚â† 0 –≤ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∫–æ—Ä–Ω—è</li>
          <li>–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–ª–∏–∑–∫–æ –∫ –∫–æ—Ä–Ω—é</li>
        </ul>
      </div>
    </div>
  );
};

// –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
const ApplicationsSection = () => {
  return (
    <div className="space-y-6">
      <div>
        <h3 className="mb-4 text-xl font-bold text-amber-400">–û–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:</h3>
        <div className="grid gap-4 md:grid-cols-2">
          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-blue-400">üî¨ –ù–∞—É—á–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è</h4>
            <ul className="space-y-1 text-sm text-slate-300">
              <li>‚Ä¢ –†–µ—à–µ–Ω–∏–µ –Ω–µ–ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π –≤ —Ñ–∏–∑–∏–∫–µ</li>
              <li>‚Ä¢ –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∞–∫—Ü–∏–π</li>
              <li>‚Ä¢ –ê—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã</li>
              <li>‚Ä¢ –ö–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞</li>
            </ul>
          </div>

          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-green-400">üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞</h4>
            <ul className="space-y-1 text-sm text-slate-300">
              <li>‚Ä¢ –†–∞—Å—á–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –Ω–æ—Ä–º—ã –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ (IRR)</li>
              <li>‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞–≤–æ–∫ –ø–æ –æ–±–ª–∏–≥–∞—Ü–∏—è–º</li>
              <li>‚Ä¢ –û—Ü–µ–Ω–∫–∞ –æ–ø—Ü–∏–æ–Ω–æ–≤ (–º–æ–¥–µ–ª—å –ë–ª—ç–∫–∞-–®–æ—É–ª–∑–∞)</li>
              <li>‚Ä¢ –†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç</li>
            </ul>
          </div>

          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-purple-400">üèóÔ∏è –ò–Ω–∂–µ–Ω–µ—Ä–∏—è</h4>
            <ul className="space-y-1 text-sm text-slate-300">
              <li>‚Ä¢ –†–∞—Å—á–µ—Ç –Ω–∞–≥—Ä—É–∑–æ–∫ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö</li>
              <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</li>
              <li>‚Ä¢ –ê–Ω–∞–ª–∏–∑ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ø–µ–π</li>
              <li>‚Ä¢ –ì–∏–¥—Ä–∞–≤–ª–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã</li>
            </ul>
          </div>

          <div className="p-4 border rounded-lg bg-slate-800/50 border-slate-700">
            <h4 className="mb-2 font-semibold text-amber-400">ü§ñ –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</h4>
            <ul className="space-y-1 text-sm text-slate-300">
              <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø–æ—Ç–µ—Ä—å</li>
              <li>‚Ä¢ –û–±—É—á–µ–Ω–∏–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π</li>
              <li>‚Ä¢ –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è</li>
              <li>‚Ä¢ SVM –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</li>
            </ul>
          </div>
        </div>
      </div>

      <div className="p-4 border rounded-lg bg-blue-900/20 border-blue-800/30">
        <h4 className="mb-3 font-bold text-blue-300">üí° –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã:</h4>
        <div className="space-y-3 text-blue-100">
          <div>
            <strong>–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ—Ä–Ω—è:</strong> –î–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è ‚àöa —Ä–µ—à–∞–µ–º —É—Ä–∞–≤–Ω–µ–Ω–∏–µ x¬≤ - a = 0.
            –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ—Ä–Ω—è –≤–æ –º–Ω–æ–≥–∏—Ö –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞—Ö.
          </div>
          <div>
            <strong>GPS –Ω–∞–≤–∏–≥–∞—Ü–∏—è:</strong> –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ —Å–∏–≥–Ω–∞–ª–∞–º —Å–ø—É—Ç–Ω–∏–∫–æ–≤ —Ç—Ä–µ–±—É–µ—Ç —Ä–µ—à–µ–Ω–∏—è
            —Å–∏—Å—Ç–µ–º—ã –Ω–µ–ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π –º–µ—Ç–æ–¥–æ–º –ù—å—é—Ç–æ–Ω–∞-–†–∞—Ñ—Å–æ–Ω–∞.
          </div>
          <div>
            <strong>–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞:</strong> Ray tracing –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ –ù—å—é—Ç–æ–Ω–∞ –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è
            —Ç–æ—á–µ–∫ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –ª—É—á–µ–π —Å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—è–º–∏.
          </div>
        </div>
      </div>

      <div className="p-4 mt-4 border rounded-lg bg-purple-900/20 border-purple-800/30">
        <h4 className="mb-2 font-bold text-purple-300">üöÄ –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è:</h4>
        <ul className="space-y-2 text-purple-100">
          <li><strong>–ú–µ—Ç–æ–¥ —Å–µ–∫—É—â–∏—Ö:</strong> –ù–µ —Ç—Ä–µ–±—É–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑–Ω–æ—Å—Ç–Ω—É—é –∞–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—é</li>
          <li><strong>–ú–µ—Ç–æ–¥ –ù—å—é—Ç–æ–Ω–∞-–†–∞—Ñ—Å–æ–Ω–∞:</strong> –û–±–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–∏—Å—Ç–µ–º –Ω–µ–ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π</li>
          <li><strong>–ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ù—å—é—Ç–æ–Ω–∞:</strong> –î–ª—è –∫—Ä–∞—Ç–Ω—ã—Ö –∫–æ—Ä–Ω–µ–π</li>
          <li><strong>–ö–≤–∞–∑–∏-–ù—å—é—Ç–æ–Ω–æ–≤—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã:</strong> BFGS, L-BFGS –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏</li>
        </ul>
      </div>
    </div>
  );
};

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
const NewtonMethodPage: React.FC = () => {
  const [selectedFunction, setSelectedFunction] = useState<MathFunction>(PRESET_FUNCTIONS[0]);
  const [customFunction, setCustomFunction] = useState<string>('');
  const [customDerivative, setCustomDerivative] = useState<string>('');
  const [initialGuess, setInitialGuess] = useState<number>(2);
  const [tolerance, setTolerance] = useState<number>(0.0001);
  const [maxIterations, setMaxIterations] = useState<number>(20);
  const [iterations, setIterations] = useState<NewtonIteration[]>([]);
  const [isRunning, setIsRunning] = useState(false);
  const [currentIteration, setCurrentIteration] = useState(0);
  const [error, setError] = useState<string | null>(null);
  
  const methodRef = useRef<NewtonMethod | null>(null);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç–æ–¥–∞
  useEffect(() => {
    try {
      methodRef.current = new NewtonMethod(
        selectedFunction.expression,
        selectedFunction.derivative,
        tolerance,
        maxIterations
      );
      setError(null);
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π');
    }
  }, [selectedFunction, tolerance, maxIterations]);

  // –ó–∞–ø—É—Å–∫ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
  const handleStart = useCallback(() => {
    if (!methodRef.current) return;
    
    setIsRunning(true);
    setCurrentIteration(0);
    setIterations([]);
    
    try {
      const result = methodRef.current.solve(initialGuess);
      setIterations(result.iterations);
      
      // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Ç–µ—Ä–∞—Ü–∏–π
      let i = 0;
      const animateIterations = () => {
        if (i < result.iterations.length) {
          setCurrentIteration(i);
          i++;
          setTimeout(animateIterations, 500);
        } else {
          setIsRunning(false);
        }
      };
      animateIterations();
    } catch (err: any) {
      setError(err.message);
      setIsRunning(false);
    }
  }, [initialGuess]);

  // –°–±—Ä–æ—Å
  const handleReset = useCallback(() => {
    setIsRunning(false);
    setCurrentIteration(0);
    setIterations([]);
    setError(null);
  }, []);

  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
  const handleFunctionChange = useCallback((func: MathFunction) => {
    setSelectedFunction(func);
    setInitialGuess(func.initialGuess);
    handleReset();
  }, [handleReset]);

  const relatedAlgorithms = useMemo(() => 
    getRelatedAlgorithms('newton', 'numerical').map(algo => ({
      id: algo.id,
      name: algo.name,
      path: algo.path,
    })),
    []
  );

  return (
    <AlgorithmLayout
      title="–ú–µ—Ç–æ–¥ –ù—å—é—Ç–æ–Ω–∞"
      description="–ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–π —á–∏—Å–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∫–æ—Ä–Ω–µ–π —É—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏"
      complexity={{
        time: 'O(log(1/Œµ))',
        space: 'O(1)',
        note: 'Œµ - —Ç—Ä–µ–±—É–µ–º–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å',
      }}
      category={{
        id: 'numerical',
        name: '–ß–∏—Å–ª–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã',
        icon: 'tabler:math-function',
      }}
      relatedAlgorithms={relatedAlgorithms}
      visualization={
        <div className="space-y-6">
          {/* –í—ã–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ */}
          <FunctionInput
            presetFunctions={PRESET_FUNCTIONS}
            selectedFunction={selectedFunction}
            onFunctionChange={handleFunctionChange}
            initialGuess={initialGuess}
            onInitialGuessChange={setInitialGuess}
            tolerance={tolerance}
            onToleranceChange={setTolerance}
            maxIterations={maxIterations}
            onMaxIterationsChange={setMaxIterations}
            isRunning={isRunning}
          />
          
          {/* –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è */}
          <NewtonVisualizer
            func={selectedFunction}
            iterations={iterations}
            currentIteration={currentIteration}
            isRunning={isRunning}
          />
          
          {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div className="flex justify-center gap-4">
            <motion.button
              onClick={handleStart}
              disabled={isRunning || !!error}
              className={`px-6 py-3 rounded-lg font-medium text-white transition-all flex items-center gap-2 ${
                isRunning || !!error
                  ? 'bg-slate-600 cursor-not-allowed opacity-50'
                  : 'bg-green-600 hover:bg-green-700 hover:scale-105'
              }`}
              whileHover={{ scale: isRunning || !!error ? 1 : 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Icon icon="mdi:play" className="w-5 h-5" />
              –ù–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å
            </motion.button>
            
            <motion.button
              onClick={handleReset}
              className="px-6 py-3 bg-red-600 hover:bg-red-700 rounded-lg font-medium text-white transition-all flex items-center gap-2"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Icon icon="mdi:refresh" className="w-5 h-5" />
              –°–±—Ä–æ—Å–∏—Ç—å
            </motion.button>
          </div>
          
          {/* –û—à–∏–±–∫–∞ */}
          <AnimatePresence>
            {error && (
              <motion.div
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -10 }}
                className="p-4 bg-red-900/20 border border-red-700 rounded-lg"
              >
                <p className="text-red-300 flex items-center gap-2">
                  <Icon icon="mdi:alert-circle" className="w-5 h-5" />
                  {error}
                </p>
              </motion.div>
            )}
          </AnimatePresence>
          
          {/* –¢–∞–±–ª–∏—Ü–∞ –∏—Ç–µ—Ä–∞—Ü–∏–π */}
          <AnimatePresence>
            {iterations.length > 0 && (
              <IterationTable 
                iterations={iterations} 
                currentIteration={currentIteration}
              />
            )}
          </AnimatePresence>
        </div>
      }
      implementation={<CodeImplementation />}
      explanation={<AlgorithmExplanation />}
      applications={<ApplicationsSection />}
    />
  );
};

export default NewtonMethodPage;
