import React, { useState, useRef, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Icon } from '@iconify/react';

const SmoothIllusion: React.FC = () => {
  const [selectedFPS, setSelectedFPS] = useState<24 | 30 | 60>(60);
  const [showPerformance, setShowPerformance] = useState(true);
  const [isAnimating, setIsAnimating] = useState(false);
  const [currentDemo, setCurrentDemo] = useState<'scroll' | 'transition' | 'video' | null>(null);
  const [motionBlurEnabled, setMotionBlurEnabled] = useState(true);
  const [currentFPS, setCurrentFPS] = useState(60);
  const [cpuUsage, setCpuUsage] = useState(0);
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const fpsRef = useRef<number[]>([]);
  const animationIdRef = useRef<number | null>(null);
  const lastTimeRef = useRef<number>(0);

  // FPS –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
  useEffect(() => {
    let lastTime = performance.now();
    
    const measureFPS = (currentTime: number) => {
      const deltaTime = currentTime - lastTime;
      const fps = 1000 / deltaTime;
      
      fpsRef.current.push(fps);
      if (fpsRef.current.length > 30) {
        fpsRef.current.shift();
      }
      
      const avgFPS = fpsRef.current.reduce((a, b) => a + b, 0) / fpsRef.current.length;
      setCurrentFPS(Math.round(avgFPS));
      
      lastTime = currentTime;
      
      if (showPerformance) {
        animationIdRef.current = requestAnimationFrame(measureFPS);
      }
    };
    
    if (showPerformance) {
      animationIdRef.current = requestAnimationFrame(measureFPS);
    }
    
    return () => {
      if (animationIdRef.current) {
        cancelAnimationFrame(animationIdRef.current);
      }
    };
  }, [showPerformance]);

  // –°–∏–º—É–ª—è—Ü–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ CPU
  useEffect(() => {
    if (isAnimating) {
      const load = selectedFPS === 60 ? 45 : selectedFPS === 30 ? 25 : 15;
      setCpuUsage(load + Math.random() * 10);
    } else {
      setCpuUsage(5 + Math.random() * 5);
    }
  }, [isAnimating, selectedFPS]);

  // –î–µ–º–æ —Å–∫—Ä–æ–ª–ª–∞ —Å —Ä–∞–∑–Ω—ã–º FPS
  const ScrollDemo = () => {
    const scrollRef = useRef<HTMLDivElement>(null);
    const [scrolling, setScrolling] = useState(false);
    
    const simulateScroll = () => {
      if (!scrollRef.current) return;
      setScrolling(true);
      
      let start = 0;
      const distance = 300;
      const duration = 2000;
      const startTime = Date.now();
      
      const scroll = () => {
        const elapsed = Date.now() - startTime;
        const progress = Math.min(elapsed / duration, 1);
        const easeProgress = 1 - Math.pow(1 - progress, 3);
        
        if (scrollRef.current) {
          scrollRef.current.scrollTop = easeProgress * distance;
        }
        
        if (progress < 1) {
          setTimeout(scroll, 1000 / selectedFPS);
        } else {
          setScrolling(false);
        }
      };
      
      scroll();
    };
    
    return (
      <div className="p-6 bg-slate-800/50 rounded-lg">
        <h4 className="text-lg font-semibold text-purple-300 mb-4">
          –°–∫—Ä–æ–ª–ª —Å {selectedFPS} FPS
        </h4>
        
        <div 
          ref={scrollRef}
          className="h-48 overflow-y-auto bg-slate-900 rounded-lg p-4 mb-4"
        >
          {[...Array(20)].map((_, i) => (
            <div 
              key={i} 
              className="p-3 mb-2 bg-slate-800 rounded text-gray-300"
            >
              –≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ {i + 1}
            </div>
          ))}
        </div>
        
        <button
          onClick={simulateScroll}
          disabled={scrolling}
          className="px-4 py-2 bg-purple-600 hover:bg-purple-700 disabled:bg-slate-700 text-white rounded transition-colors"
        >
          {scrolling ? '–°–∫—Ä–æ–ª–ª–∏–Ω–≥...' : '–°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–æ–ª–ª'}
        </button>
        
        <p className="text-sm text-gray-400 mt-4">
          üí° –ü—Ä–∏ {selectedFPS === 60 ? '–ø–ª–∞–≤–Ω–æ–º —Å–∫—Ä–æ–ª–ª–µ' : selectedFPS === 30 ? '–∑–∞–º–µ—Ç–Ω—ã—Ö —Ä—ã–≤–∫–∞—Ö' : '—Å–∏–ª—å–Ω—ã—Ö –¥–µ—Ä–≥–∞–Ω–∏—è—Ö'} 
          {selectedFPS < 60 && ' –∏–ª–ª—é–∑–∏—è –ø—Ä—è–º–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Ä–∞–∑—Ä—É—à–∞–µ—Ç—Å—è'}
        </p>
      </div>
    );
  };

  // –î–µ–º–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ —Å Motion Blur
  const TransitionDemo = () => {
    const [boxPosition, setBoxPosition] = useState<'left' | 'right'>('left');
    
    const getAnimationDuration = () => {
      return selectedFPS === 24 ? 0.5 : 0.3;
    };
    
    return (
      <div className="p-6 bg-slate-800/50 rounded-lg">
        <h4 className="text-lg font-semibold text-purple-300 mb-4">
          –ü–µ—Ä–µ—Ö–æ–¥ —Å {selectedFPS} FPS {motionBlurEnabled && '+ Motion Blur'}
        </h4>
        
        <div className="relative h-32 bg-slate-900 rounded-lg mb-4 overflow-hidden">
          <motion.div
            className="absolute top-1/2 -translate-y-1/2 w-16 h-16 bg-purple-600 rounded-lg"
            animate={{
              x: boxPosition === 'left' ? 20 : 'calc(100% - 80px)',
            }}
            transition={{
              duration: getAnimationDuration(),
              ease: "easeInOut",
            }}
            style={{
              filter: motionBlurEnabled && selectedFPS === 24 
                ? `blur(${Math.abs(boxPosition === 'left' ? 8 : 0)}px)` 
                : 'none'
            }}
          />
          
          {/* –°–∏–º—É–ª—è—Ü–∏—è Motion Blur —Å–ª–µ–¥–∞ */}
          {motionBlurEnabled && selectedFPS === 24 && (
            <motion.div
              className="absolute top-1/2 -translate-y-1/2 w-16 h-16 rounded-lg"
              initial={false}
              animate={{
                x: boxPosition === 'left' ? 20 : 'calc(100% - 80px)',
                opacity: [0, 0.3, 0],
                scaleX: [1, 2, 1],
              }}
              transition={{
                duration: getAnimationDuration(),
                ease: "easeInOut",
              }}
              style={{
                background: 'linear-gradient(90deg, transparent, rgba(147, 51, 234, 0.3), transparent)',
                transformOrigin: boxPosition === 'left' ? 'left center' : 'right center',
              }}
            />
          )}
        </div>
        
        <div className="flex gap-3">
          <button
            onClick={() => setBoxPosition(boxPosition === 'left' ? 'right' : 'left')}
            className="px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded transition-colors"
          >
            –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å
          </button>
          
          {selectedFPS === 24 && (
            <label className="flex items-center gap-2">
              <input
                type="checkbox"
                checked={motionBlurEnabled}
                onChange={(e) => setMotionBlurEnabled(e.target.checked)}
                className="w-4 h-4 rounded"
              />
              <span className="text-sm text-gray-300">Motion Blur</span>
            </label>
          )}
        </div>
        
        <p className="text-sm text-gray-400 mt-4">
          üí° {selectedFPS === 24 
            ? motionBlurEnabled 
              ? 'Motion Blur —Å–æ–∑–¥–∞–µ—Ç –∏–ª–ª—é–∑–∏—é –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –Ω–∏–∑–∫–æ–º FPS'
              : '–ë–µ–∑ Motion Blur –¥–≤–∏–∂–µ–Ω–∏–µ –≤—ã–≥–ª—è–¥–∏—Ç –¥–µ—Ä–≥–∞–Ω—ã–º'
            : selectedFPS === 60 
              ? '–ü—Ä–∏ 60 FPS –¥–≤–∏–∂–µ–Ω–∏–µ –ø–ª–∞–≤–Ω–æ–µ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤'
              : '30 FPS ‚Äî –∫–æ–º–ø—Ä–æ–º–∏—Å—Å –º–µ–∂–¥—É –ø–ª–∞–≤–Ω–æ—Å—Ç—å—é –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é'
          }
        </p>
      </div>
    );
  };

  // –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const PerformanceMonitor = () => {
    const getFPSColor = () => {
      if (currentFPS >= 55) return 'text-green-400';
      if (currentFPS >= 28) return 'text-yellow-400';
      return 'text-red-400';
    };
    
    const getCPUColor = () => {
      if (cpuUsage <= 30) return 'text-green-400';
      if (cpuUsage <= 60) return 'text-yellow-400';
      return 'text-red-400';
    };
    
    return (
      <div className="p-4 bg-slate-900 rounded-lg border border-slate-700">
        <h4 className="text-sm font-semibold text-gray-400 mb-3">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</h4>
        
        <div className="grid grid-cols-2 gap-4">
          <div>
            <div className="flex items-center justify-between mb-1">
              <span className="text-xs text-gray-500">FPS</span>
              <span className={`text-lg font-bold ${getFPSColor()}`}>
                {currentFPS}
              </span>
            </div>
            <div className="h-2 bg-slate-800 rounded-full overflow-hidden">
              <motion.div
                className={`h-full ${
                  currentFPS >= 55 ? 'bg-green-500' :
                  currentFPS >= 28 ? 'bg-yellow-500' : 'bg-red-500'
                }`}
                animate={{ width: `${(currentFPS / 60) * 100}%` }}
                transition={{ duration: 0.3 }}
              />
            </div>
          </div>
          
          <div>
            <div className="flex items-center justify-between mb-1">
              <span className="text-xs text-gray-500">CPU</span>
              <span className={`text-lg font-bold ${getCPUColor()}`}>
                {Math.round(cpuUsage)}%
              </span>
            </div>
            <div className="h-2 bg-slate-800 rounded-full overflow-hidden">
              <motion.div
                className={`h-full ${
                  cpuUsage <= 30 ? 'bg-green-500' :
                  cpuUsage <= 60 ? 'bg-yellow-500' : 'bg-red-500'
                }`}
                animate={{ width: `${cpuUsage}%` }}
                transition={{ duration: 0.3 }}
              />
            </div>
          </div>
        </div>
        
        <div className="mt-3 text-xs text-gray-500">
          –í—Ä–µ–º—è –∫–∞–¥—Ä–∞: ~{Math.round(1000 / currentFPS)}ms
        </div>
      </div>
    );
  };

  // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ FPS
  const FPSComparison = () => {
    const standards = [
      {
        fps: 60,
        name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
        icon: 'ph:cursor-click',
        color: 'blue',
        description: '–î–ª—è UI –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π',
        frameTime: '16.67ms',
        useCase: '–°–∫—Ä–æ–ª–ª, –ø–µ—Ä–µ—Ö–æ–¥—ã, –º–∏–∫—Ä–æ–∞–Ω–∏–º–∞—Ü–∏–∏',
        perception: '–ê–±—Å–æ–ª—é—Ç–Ω–æ –ø–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ',
        cost: '–í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ CPU/GPU'
      },
      {
        fps: 30,
        name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç –ö–æ–º–ø—Ä–æ–º–∏—Å—Å–∞',
        icon: 'ph:scales',
        color: 'yellow',
        description: '–î–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
        frameTime: '33.33ms',
        useCase: '–§–æ–Ω–æ–≤—ã–µ –≤–∏–¥–µ–æ, —Å–ª–∞–π–¥—à–æ—É',
        perception: '–ü—Ä–∏–µ–º–ª–µ–º–∞—è –ø–ª–∞–≤–Ω–æ—Å—Ç—å',
        cost: '–°—Ä–µ–¥–Ω—è—è –Ω–∞–≥—Ä—É–∑–∫–∞'
      },
      {
        fps: 24,
        name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç –ö–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∞',
        icon: 'ph:film-strip',
        color: 'purple',
        description: '–î–ª—è –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è',
        frameTime: '41.67ms',
        useCase: '–í–∏–¥–µ–æ-—Ä–æ–ª–∏–∫–∏, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏',
        perception: '–ö–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–Ω—ã–π –≤–∏–¥',
        cost: '–ù–∏–∑–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ + Motion Blur'
      }
    ];
    
    return (
      <div className="grid md:grid-cols-3 gap-4 mb-8">
        {standards.map((standard) => {
          const isActive = selectedFPS === standard.fps;
          const colorClasses = {
            blue: {
              bg: isActive ? 'bg-blue-900/30' : 'bg-slate-800/50',
              border: isActive ? 'border-blue-700' : 'border-slate-700',
              icon: 'text-blue-400',
              title: 'text-blue-400',
              badge: 'bg-blue-600'
            },
            yellow: {
              bg: isActive ? 'bg-yellow-900/30' : 'bg-slate-800/50',
              border: isActive ? 'border-yellow-700' : 'border-slate-700',
              icon: 'text-yellow-400',
              title: 'text-yellow-400',
              badge: 'bg-yellow-600'
            },
            purple: {
              bg: isActive ? 'bg-purple-900/30' : 'bg-slate-800/50',
              border: isActive ? 'border-purple-700' : 'border-slate-700',
              icon: 'text-purple-400',
              title: 'text-purple-400',
              badge: 'bg-purple-600'
            }
          }[standard.color];
          
          return (
            <motion.div
              key={standard.fps}
              onClick={() => setSelectedFPS(standard.fps as any)}
              className={`p-6 rounded-lg border cursor-pointer transition-all ${colorClasses.bg} ${colorClasses.border}`}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
            >
              <div className="flex items-start justify-between mb-4">
                <Icon icon={standard.icon} className={`w-8 h-8 ${colorClasses.icon}`} />
                <span className={`px-2 py-1 text-xs font-bold text-white rounded ${colorClasses.badge}`}>
                  {standard.fps} FPS
                </span>
              </div>
              
              <h4 className={`font-semibold mb-2 ${colorClasses.title}`}>
                {standard.name}
              </h4>
              <p className="text-sm text-gray-400 mb-4">{standard.description}</p>
              
              <div className="space-y-2 text-xs">
                <div>
                  <span className="text-gray-500">–í—Ä–µ–º—è –∫–∞–¥—Ä–∞:</span>
                  <span className="text-gray-300 ml-2">{standard.frameTime}</span>
                </div>
                <div>
                  <span className="text-gray-500">–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:</span>
                  <p className="text-gray-300 mt-1">{standard.useCase}</p>
                </div>
                <div>
                  <span className="text-gray-500">–í–æ—Å–ø—Ä–∏—è—Ç–∏–µ:</span>
                  <p className="text-gray-300 mt-1">{standard.perception}</p>
                </div>
                <div>
                  <span className="text-gray-500">–¶–µ–Ω–∞:</span>
                  <p className="text-gray-300 mt-1">{standard.cost}</p>
                </div>
              </div>
            </motion.div>
          );
        })}
      </div>
    );
  };

  // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Motion Blur
  const MotionBlurDemo = () => {
    const [isMoving, setIsMoving] = useState(false);
    
    return (
      <div className="mb-12 p-6 bg-gradient-to-br from-purple-900/20 to-pink-900/20 rounded-lg border border-purple-700/50">
        <h3 className="text-xl font-semibold text-purple-300 mb-4">
          –ú–∞–≥–∏—è Motion Blur
        </h3>
        
        <p className="text-gray-300 mb-6">
          Motion Blur ‚Äî —ç—Ç–æ "–∫–ª–µ–π", –∫–æ—Ç–æ—Ä—ã–π —Å–≥–ª–∞–∂–∏–≤–∞–µ—Ç –¥–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∏–∑–∫–æ–º —Ñ—Ä–µ–π–º—Ä–µ–π—Ç–µ. 
          –û–Ω —Å–æ–∑–¥–∞–µ—Ç –∏–ª–ª—é–∑–∏—é –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –∫–∞–¥—Ä–æ–≤.
        </p>
        
        <div className="grid md:grid-cols-2 gap-6">
          <div className="p-4 bg-slate-900 rounded-lg">
            <h4 className="text-sm font-medium text-gray-400 mb-3">–ë–µ–∑ Motion Blur (24 FPS)</h4>
            <div className="relative h-24 bg-slate-800 rounded overflow-hidden mb-3">
              <motion.div
                className="absolute top-1/2 -translate-y-1/2 w-12 h-12 bg-red-500 rounded"
                animate={{
                  x: isMoving ? 'calc(100% - 48px)' : 0,
                }}
                transition={{
                  duration: 1,
                  ease: "linear",
                  repeat: isMoving ? Infinity : 0,
                  repeatType: "reverse"
                }}
              />
            </div>
            <p className="text-xs text-gray-500">–î–µ—Ä–≥–∞–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ</p>
          </div>
          
          <div className="p-4 bg-slate-900 rounded-lg">
            <h4 className="text-sm font-medium text-gray-400 mb-3">–° Motion Blur (24 FPS)</h4>
            <div className="relative h-24 bg-slate-800 rounded overflow-hidden mb-3">
              <motion.div
                className="absolute top-1/2 -translate-y-1/2 w-12 h-12 bg-green-500 rounded"
                animate={{
                  x: isMoving ? 'calc(100% - 48px)' : 0,
                }}
                transition={{
                  duration: 1,
                  ease: "linear",
                  repeat: isMoving ? Infinity : 0,
                  repeatType: "reverse"
                }}
              />
              {/* Motion Blur —ç—Ñ—Ñ–µ–∫—Ç */}
              {isMoving && (
                <motion.div
                  className="absolute top-1/2 -translate-y-1/2 h-12 bg-green-500/30 rounded"
                  animate={{
                    x: ['0%', '100%'],
                    width: ['48px', '96px', '48px'],
                    opacity: [0.8, 0.4, 0.8],
                  }}
                  transition={{
                    duration: 1,
                    ease: "linear",
                    repeat: Infinity,
                    repeatType: "reverse"
                  }}
                />
              )}
            </div>
            <p className="text-xs text-gray-500">–í–∏–∑—É–∞–ª—å–Ω–æ –ø–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ</p>
          </div>
        </div>
        
        <button
          onClick={() => setIsMoving(!isMoving)}
          className="mt-4 px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded transition-colors"
        >
          {isMoving ? '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å'} –∞–Ω–∏–º–∞—Ü–∏—é
        </button>
      </div>
    );
  };

  // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã
  const TechnicalTradeoffs = () => {
    return (
      <div className="mb-12">
        <h3 className="text-2xl font-semibold text-purple-300 mb-6">
          –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã
        </h3>
        
        <div className="grid md:grid-cols-2 gap-6">
          <div className="p-6 bg-green-900/20 rounded-lg border border-green-800/50">
            <h4 className="text-green-400 font-semibold mb-3 flex items-center gap-2">
              <Icon icon="ph:check-circle" className="w-5 h-5" />
              –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            </h4>
            
            <div className="space-y-3">
              <div className="p-3 bg-green-800/20 rounded">
                <p className="font-medium text-gray-200 mb-1">CSS Transform & Opacity</p>
                <p className="text-sm text-gray-400">GPU-—É—Å–∫–æ—Ä–µ–Ω–∏–µ, 60 FPS –≤–æ–∑–º–æ–∂–Ω—ã</p>
              </div>
              
              <div className="p-3 bg-green-800/20 rounded">
                <p className="font-medium text-gray-200 mb-1">will-change</p>
                <p className="text-sm text-gray-400">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–ª–æ—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏</p>
              </div>
              
              <div className="p-3 bg-green-800/20 rounded">
                <p className="font-medium text-gray-200 mb-1">requestAnimationFrame</p>
                <p className="text-sm text-gray-400">–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –±—Ä–∞—É–∑–µ—Ä–æ–º</p>
              </div>
            </div>
          </div>
          
          <div className="p-6 bg-red-900/20 rounded-lg border border-red-800/50">
            <h4 className="text-red-400 font-semibold mb-3 flex items-center gap-2">
              <Icon icon="ph:warning-circle" className="w-5 h-5" />
              –ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏
            </h4>
            
            <div className="space-y-3">
              <div className="p-3 bg-red-800/20 rounded">
                <p className="font-medium text-gray-200 mb-1">–ê–Ω–∏–º–∞—Ü–∏—è width/height</p>
                <p className="text-sm text-gray-400">–í—ã–∑—ã–≤–∞–µ—Ç reflow, —É–±–∏–≤–∞–µ—Ç FPS</p>
              </div>
              
              <div className="p-3 bg-red-800/20 rounded">
                <p className="font-medium text-gray-200 mb-1">–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤</p>
                <p className="text-sm text-gray-400">–ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞</p>
              </div>
              
              <div className="p-3 bg-red-800/20 rounded">
                <p className="font-medium text-gray-200 mb-1">Motion Blur –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
                <p className="text-sm text-gray-400">–û–≥—Ä–æ–º–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ CPU</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="prose prose-invert max-w-none">
      <h2 className="mb-8 text-3xl font-bold text-purple-400">
        –ò–ª–ª—é–∑–∏—è –ü–ª–∞–≤–Ω–æ—Å—Ç–∏ ‚Äî –§—Ä–µ–π–º—Ä–µ–π—Ç, Motion Blur –∏ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ö–æ–º–ø—Ä–æ–º–∏—Å—Å—ã
      </h2>

      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="p-6 mb-8 bg-yellow-900/20 rounded-lg border border-yellow-800/50">
        <p className="text-lg text-yellow-300 mb-4">
          <Icon icon="ph:monitor" className="inline w-6 h-6 mr-2" />
          –ú—ã –º–æ–∂–µ–º —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º—É—é –≥–µ–Ω–∏–∞–ª—å–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é. –ù–æ –µ—Å–ª–∏ –æ–Ω–∞ "–¥–µ—Ä–≥–∞–µ—Ç—Å—è" –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ 
          –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî –≤—Å—è —Ä–∞–±–æ—Ç–∞ –∏–¥–µ—Ç –Ω–∞—Å–º–∞—Ä–∫—É.
        </p>
        <p className="text-gray-300 mb-0">
          <strong className="text-orange-400">–ò—Å—Ö–æ–¥–Ω–æ–µ –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ:</strong> –ß–µ–º –≤—ã—à–µ —Ñ—Ä–µ–π–º—Ä–µ–π—Ç, —Ç–µ–º –ª—É—á—à–µ. 
          60 fps ‚Äî —ç—Ç–æ —Å–≤—è—Ç–æ–π –ì—Ä–∞–∞–ª—å, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –≤—Å–µ–≥–¥–∞.
        </p>
      </div>

      {/* –ù–æ–≤–∞—è –∏–¥–µ—è */}
      <div className="p-6 mb-12 bg-purple-900/20 rounded-lg border border-purple-700/50">
        <h3 className="text-2xl font-semibold text-purple-400 mb-4">
          –ù–æ–≤–∞—è –∏–¥–µ—è: –§—Ä–µ–π–º—Ä–µ–π—Ç ‚Äî —ç—Ç–æ –±—é–¥–∂–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        </h3>
        <p className="text-lg text-gray-200">
          –ù–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –Ω–µ —Å–ª–µ–ø–æ –¥–æ—Å—Ç–∏—á—å 60 fps, –∞ —Å–æ–∑–¥–∞—Ç—å –∏–ª–ª—é–∑–∏—é –ø–ª–∞–≤–Ω–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É—è 
          <strong className="text-purple-400"> —Å–∞–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞</strong>, 
          –Ω–µ "—Å–∂–∏–≥–∞—è" –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –∏ –±–∞—Ç–∞—Ä–µ—é.
        </p>
      </div>

      {/* –ö–æ–Ω—Ç—Ä–æ–ª—ã FPS */}
      <div className="mb-8 p-4 bg-slate-900 rounded-lg border border-slate-700">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-4">
            <span className="text-gray-400">–í—ã–±–µ—Ä–∏—Ç–µ FPS:</span>
            <div className="flex gap-2">
              {[60, 30, 24].map((fps) => (
                <button
                  key={fps}
                  onClick={() => setSelectedFPS(fps as any)}
                  className={`px-3 py-1 rounded transition-all ${
                    selectedFPS === fps
                      ? 'bg-purple-600 text-white'
                      : 'bg-slate-700 text-gray-300 hover:bg-slate-600'
                  }`}
                >
                  {fps} FPS
                </button>
              ))}
            </div>
          </div>
          
          <label className="flex items-center gap-2">
            <input
              type="checkbox"
              checked={showPerformance}
              onChange={(e) => setShowPerformance(e.target.checked)}
              className="w-4 h-4 rounded"
            />
            <span className="text-sm text-gray-300">–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</span>
          </label>
        </div>
      </div>

      {/* –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */}
      {showPerformance && (
        <div className="mb-8">
          <PerformanceMonitor />
        </div>
      )}

      {/* –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ */}
      <FPSComparison />

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ */}
      <div className="mb-12">
        <h3 className="text-2xl font-semibold text-purple-300 mb-6">
          –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        </h3>
        
        <div className="grid md:grid-cols-2 gap-6">
          <ScrollDemo />
          <TransitionDemo />
        </div>
      </div>

      {/* Motion Blur –¥–µ–º–æ */}
      <MotionBlurDemo />

      {/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã */}
      <TechnicalTradeoffs />

      {/* –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      <div className="mb-12 p-6 bg-blue-900/20 rounded-lg border border-blue-800/50">
        <h3 className="text-xl font-semibold text-blue-400 mb-4">
          –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        </h3>
        
        <div className="space-y-4">
          <div>
            <h4 className="font-medium text-gray-200 mb-2">–î–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:</h4>
            <ul className="space-y-1 text-sm text-gray-400">
              <li>‚Ä¢ –¶–µ–ª–µ–≤–æ–π FPS: 60</li>
              <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ transform –∏ opacity</li>
              <li>‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ —Å–ª–æ–∂–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ —Ç–µ–Ω–µ–π</li>
              <li>‚Ä¢ –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ —Å–ª–∞–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö</li>
            </ul>
          </div>
          
          <div>
            <h4 className="font-medium text-gray-200 mb-2">–î–ª—è –≤–∏–¥–µ–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:</h4>
            <ul className="space-y-1 text-sm text-gray-400">
              <li>‚Ä¢ 30 FPS –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ</li>
              <li>‚Ä¢ 24 FPS + Motion Blur –¥–ª—è –∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–Ω–æ—Å—Ç–∏</li>
              <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–∑–º–µ—Ä –∏ –∫–∞—á–µ—Å—Ç–≤–æ</li>
            </ul>
          </div>
          
          <div>
            <h4 className="font-medium text-gray-200 mb-2">–û–±—â–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:</h4>
            <ul className="space-y-1 text-sm text-gray-400">
              <li>‚Ä¢ –ü—Ä–æ—Ñ–∏–ª–∏—Ä—É–π—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</li>
              <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CSS containment</li>
              <li>‚Ä¢ –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ reflow –∏ repaint</li>
              <li>‚Ä¢ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã</li>
            </ul>
          </div>
        </div>
      </div>

      {/* –§–∏–Ω–∞–ª—å–Ω—ã–π –≤–µ—Ä–¥–∏–∫—Ç */}
      <div className="mt-12 p-8 bg-gradient-to-r from-purple-900/30 to-pink-900/30 rounded-lg border border-purple-700/50">
        <h3 className="text-2xl font-bold text-purple-300 mb-6">
          –í–µ—Ä–¥–∏–∫—Ç: –í–∞—à–∞ –ù–æ–≤–∞—è –ú–µ–Ω—Ç–∞–ª—å–Ω–∞—è –ú–æ–¥–µ–ª—å
        </h3>
        
        <div className="p-4 bg-purple-800/20 rounded-lg mb-6">
          <p className="text-lg text-purple-200 font-medium mb-0">
            –ü–µ—Ä–µ—Å—Ç–∞–Ω—å—Ç–µ –¥—É–º–∞—Ç—å –æ 60 fps –∫–∞–∫ –æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π —Ü–µ–ª–∏.<br/>
            <strong className="text-purple-400">–î—É–º–∞–π—Ç–µ –æ —Ñ—Ä–µ–π–º—Ä–µ–π—Ç–µ –∫–∞–∫ –æ –≤—ã–±–æ—Ä–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞.</strong>
          </p>
        </div>

        <div className="space-y-4">
          <h4 className="font-semibold text-purple-400 text-lg">
            –ó–∞–¥–∞–π—Ç–µ —Å–µ–±–µ –≤–æ–ø—Ä–æ—Å: "–ö–∞–∫–æ–≤–∞ –ø—Ä–∏—Ä–æ–¥–∞ —ç—Ç–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è?"
          </h4>
          
          <div className="grid md:grid-cols-3 gap-4">
            <div className="p-4 bg-blue-900/20 rounded-lg border border-blue-800/50">
              <Icon icon="ph:cursor-click" className="w-8 h-8 text-blue-400 mb-2" />
              <p className="font-medium text-blue-400 mb-2">–ü—Ä—è–º–æ–π –æ—Ç–∫–ª–∏–∫ UI?</p>
              <ul className="text-sm text-gray-300 space-y-1">
                <li>‚Üí –¶–µ–ª—å: –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</li>
                <li>‚Üí –°—Ç–∞–Ω–¥–∞—Ä—Ç: 60 fps</li>
                <li>‚Üí –ó–∞–±—É–¥—å—Ç–µ –ø—Ä–æ Motion Blur</li>
              </ul>
            </div>
            
            <div className="p-4 bg-purple-900/20 rounded-lg border border-purple-800/50">
              <Icon icon="ph:film-strip" className="w-8 h-8 text-purple-400 mb-2" />
              <p className="font-medium text-purple-400 mb-2">–í–∏–¥–µ–æ-—Ä–æ–ª–∏–∫?</p>
              <ul className="text-sm text-gray-300 space-y-1">
                <li>‚Üí –¶–µ–ª—å: –∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–Ω–æ—Å—Ç—å</li>
                <li>‚Üí –°—Ç–∞–Ω–¥–∞—Ä—Ç: 24 fps</li>
                <li>‚Üí –û–±—è–∑–∞—Ç–µ–ª–µ–Ω Motion Blur</li>
              </ul>
            </div>
            
            <div className="p-4 bg-yellow-900/20 rounded-lg border border-yellow-800/50">
              <Icon icon="ph:battery-medium" className="w-8 h-8 text-yellow-400 mb-2" />
              <p className="font-medium text-yellow-400 mb-2">–§–æ–Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç?</p>
              <ul className="text-sm text-gray-300 space-y-1">
                <li>‚Üí –¶–µ–ª—å: —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</li>
                <li>‚Üí –°—Ç–∞–Ω–¥–∞—Ä—Ç: 30 fps</li>
                <li>‚Üí –≠–∫–æ–Ω–æ–º–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤</li>
              </ul>
            </div>
          </div>

          <p className="text-lg text-gray-200 italic text-center mt-8">
            –ü–æ–Ω–∏–º–∞–Ω–∏–µ —ç—Ç–∏—Ö –∫–æ–º–ø—Ä–æ–º–∏—Å—Å–æ–≤ –æ—Ç–ª–∏—á–∞–µ—Ç –¥–∏–∑–∞–π–Ω–µ—Ä–∞ –∫—Ä–∞—Å–∏–≤—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫<br/>
            –æ—Ç <strong className="text-purple-400">–∏–Ω–∂–µ–Ω–µ—Ä–∞ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –æ–ø—ã—Ç–∞</strong>,<br/>
            –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–µ –∏ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã.
          </p>
        </div>
      </div>
    </div>
  );
};

export default SmoothIllusion;