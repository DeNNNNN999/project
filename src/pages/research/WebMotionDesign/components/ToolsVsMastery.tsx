import React, { useState, useRef, useEffect } from 'react';
import { motion, AnimatePresence, useAnimation } from 'framer-motion';
import { Icon } from '@iconify/react';

const ToolsVsMastery: React.FC = () => {
  const [activeDemo, setActiveDemo] = useState<string | null>(null);
  const [toolProgress, setToolProgress] = useState(0);
  const [masteryProgress, setMasteryProgress] = useState(0);
  const [selectedTool, setSelectedTool] = useState<string | null>(null);
  const [showComparison, setShowComparison] = useState(false);
  const [animationMode, setAnimationMode] = useState<'tool' | 'mastery'>('tool');

  // –î–µ–º–æ: –õ–æ–≤—É—à–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  const ToolTrapDemo = () => {
    const [learnedTools, setLearnedTools] = useState<string[]>([]);
    const [dopamineHits, setDopamineHits] = useState(0);
    const [actualSkill, setActualSkill] = useState(0);

    const tools = [
      { name: 'After Effects', icon: 'üé¨', complexity: 85 },
      { name: 'Cinema 4D', icon: 'üéÆ', complexity: 90 },
      { name: 'Blender', icon: 'üé®', complexity: 88 },
      { name: 'Houdini', icon: 'üåä', complexity: 95 },
      { name: 'Figma', icon: 'üéØ', complexity: 60 },
      { name: 'Principle', icon: 'üì±', complexity: 50 },
      { name: 'Rive', icon: 'üöÄ', complexity: 70 },
      { name: 'Unity', icon: 'üé≤', complexity: 85 }
    ];

    const learnTool = (toolName: string) => {
      if (!learnedTools.includes(toolName)) {
        setLearnedTools([...learnedTools, toolName]);
        setDopamineHits(prev => prev + 1);
        setActualSkill(prev => Math.min(prev + 5, 30)); // –ú–∞–∫—Å–∏–º—É–º 30% –æ—Ç –∑–Ω–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –¥–æ—Ñ–∞–º–∏–Ω–æ–≤–æ–≥–æ —É–¥–∞—Ä–∞
        setTimeout(() => setDopamineHits(prev => Math.max(prev - 0.5, 0)), 2000);
      }
    };

    return (
      <div className="bg-slate-800 rounded-lg p-6 border border-red-500/20">
        <h3 className="text-xl font-semibold text-red-400 mb-4 flex items-center gap-2">
          <Icon icon="ph:warning-triangle" className="w-5 h-5" />
          –õ–æ–≤—É—à–∫–∞ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        </h3>

        <div className="grid grid-cols-2 md:grid-cols-4 gap-3 mb-6">
          {tools.map((tool) => (
            <motion.button
              key={tool.name}
              onClick={() => learnTool(tool.name)}
              disabled={learnedTools.includes(tool.name)}
              className={`p-4 rounded-lg border transition-all ${
                learnedTools.includes(tool.name)
                  ? 'bg-green-900/20 border-green-500/30'
                  : 'bg-slate-700 border-slate-600 hover:border-yellow-500/50'
              }`}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <div className="text-2xl mb-1">{tool.icon}</div>
              <div className="text-sm font-medium">{tool.name}</div>
              <div className="text-xs text-slate-400 mt-1">
                {learnedTools.includes(tool.name) ? '‚úì –ò–∑—É—á–µ–Ω–æ' : `${tool.complexity}% —Å–ª–æ–∂–Ω–æ—Å—Ç–∏`}
              </div>
            </motion.button>
          ))}
        </div>

        <div className="space-y-4">
          <div>
            <div className="flex justify-between text-sm mb-1">
              <span className="text-yellow-400">–î–æ—Ñ–∞–º–∏–Ω–æ–≤—ã–π —É–¥–∞—Ä</span>
              <span>{Math.round(dopamineHits * 10)}%</span>
            </div>
            <div className="w-full bg-slate-700 rounded-full h-2 overflow-hidden">
              <motion.div
                className="h-full bg-gradient-to-r from-yellow-400 to-orange-500"
                initial={{ width: 0 }}
                animate={{ width: `${dopamineHits * 10}%` }}
                transition={{ type: 'spring', damping: 20 }}
              />
            </div>
          </div>

          <div>
            <div className="flex justify-between text-sm mb-1">
              <span className="text-blue-400">–ò–ª–ª—é–∑–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</span>
              <span>{learnedTools.length * 12.5}%</span>
            </div>
            <div className="w-full bg-slate-700 rounded-full h-2 overflow-hidden">
              <motion.div
                className="h-full bg-gradient-to-r from-blue-400 to-purple-500"
                initial={{ width: 0 }}
                animate={{ width: `${learnedTools.length * 12.5}%` }}
              />
            </div>
          </div>

          <div>
            <div className="flex justify-between text-sm mb-1">
              <span className="text-red-400">–†–µ–∞–ª—å–Ω–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ</span>
              <span>{actualSkill}%</span>
            </div>
            <div className="w-full bg-slate-700 rounded-full h-2 overflow-hidden">
              <motion.div
                className="h-full bg-gradient-to-r from-red-400 to-red-600"
                initial={{ width: 0 }}
                animate={{ width: `${actualSkill}%` }}
              />
            </div>
          </div>
        </div>

        <div className="mt-4 p-3 bg-red-900/20 rounded-lg border border-red-500/20">
          <p className="text-sm text-red-300">
            <span className="font-semibold">–ü—Ä–æ–±–ª–µ–º–∞:</span> –í—ã –∏–∑—É—á–∏–ª–∏ {learnedTools.length} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, 
            –Ω–æ —Ä–µ–∞–ª—å–Ω–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ {actualSkill}%. –ó–Ω–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ ‚â† —É–º–µ–Ω–∏–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å.
          </p>
        </div>
      </div>
    );
  };

  // –î–µ–º–æ: –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã
  const FundamentalsDemo = () => {
    const [selectedPrinciple, setSelectedPrinciple] = useState<string | null>(null);
    const controls = useAnimation();

    const principles = [
      {
        id: 'timing',
        name: '–¢–∞–π–º–∏–Ω–≥ –∏ –°–ø–µ–π—Å–∏–Ω–≥',
        icon: <Icon icon="ph:timer" className="w-6 h-6" />,
        description: '–û—Å–Ω–æ–≤–∞ –≤—Å–µ–π –∞–Ω–∏–º–∞—Ü–∏–∏ - –∫–∞–∫ –æ–±—ä–µ–∫—Ç—ã –¥–≤–∏–∂—É—Ç—Å—è –≤–æ –≤—Ä–µ–º–µ–Ω–∏',
        demo: () => (
          <div className="flex gap-4 justify-center p-8">
            <motion.div
              className="w-16 h-16 bg-blue-500 rounded-lg"
              animate={{ y: [0, -100, 0] }}
              transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
            />
            <motion.div
              className="w-16 h-16 bg-green-500 rounded-lg"
              animate={{ y: [0, -100, 0] }}
              transition={{ duration: 2, repeat: Infinity, ease: "easeInOut" }}
            />
            <motion.div
              className="w-16 h-16 bg-purple-500 rounded-lg"
              animate={{ y: [0, -100, 0] }}
              transition={{ 
                duration: 2, 
                repeat: Infinity, 
                ease: [0.68, -0.55, 0.265, 1.55] 
              }}
            />
          </div>
        )
      },
      {
        id: 'composition',
        name: '–ö–æ–º–ø–æ–∑–∏—Ü–∏—è',
        icon: <Icon icon="ph:stack" className="w-6 h-6" />,
        description: '–ö–∞–∫ —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω—ã –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ',
        demo: () => (
          <div className="grid grid-cols-3 gap-2 p-8">
            {[...Array(9)].map((_, i) => (
              <motion.div
                key={i}
                className={`w-full aspect-square rounded ${
                  i === 4 ? 'bg-blue-500' : 'bg-slate-600'
                }`}
                initial={{ scale: 0 }}
                animate={{ scale: i === 4 ? 1.2 : 0.8 }}
                transition={{ delay: i * 0.1 }}
              />
            ))}
          </div>
        )
      },
      {
        id: 'psychology',
        name: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è',
        icon: <Icon icon="ph:brain" className="w-6 h-6" />,
        description: '–ö–∞–∫ –º–æ–∑–≥ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç –¥–≤–∏–∂–µ–Ω–∏–µ',
        demo: () => (
          <div className="flex justify-center items-center p-8">
            <motion.div className="relative w-32 h-32">
              <motion.div
                className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full"
                animate={{ rotate: 360 }}
                transition={{ duration: 3, repeat: Infinity, ease: "linear" }}
              />
              <motion.div
                className="absolute inset-4 bg-slate-900 rounded-full"
                animate={{ scale: [1, 0.8, 1] }}
                transition={{ duration: 1.5, repeat: Infinity }}
              />
            </motion.div>
          </div>
        )
      },
      {
        id: 'observation',
        name: '–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        icon: <Icon icon="ph:eye" className="w-6 h-6" />,
        description: '–£—á–∏—Ç—å—Å—è —É —Ä–µ–∞–ª—å–Ω–æ–≥–æ –º–∏—Ä–∞',
        demo: () => (
          <div className="flex flex-col items-center p-8">
            <motion.div
              className="w-24 h-1 bg-blue-500 rounded-full mb-4"
              animate={{ 
                scaleX: [1, 1.5, 0.8, 1],
                y: [0, -20, 0, 0]
              }}
              transition={{ 
                duration: 2, 
                repeat: Infinity,
                times: [0, 0.2, 0.5, 1]
              }}
            />
            <div className="text-sm text-slate-400">–ö–∞–ø–ª—è –≤–æ–¥—ã</div>
          </div>
        )
      }
    ];

    return (
      <div className="bg-slate-800 rounded-lg p-6 border border-green-500/20">
        <h3 className="text-xl font-semibold text-green-400 mb-4 flex items-center gap-2">
          <Icon icon="ph:trophy" className="w-5 h-5" />
          –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –ü—Ä–∏–Ω—Ü–∏–ø—ã
        </h3>

        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
          {principles.map((principle) => (
            <motion.button
              key={principle.id}
              onClick={() => setSelectedPrinciple(
                selectedPrinciple === principle.id ? null : principle.id
              )}
              className={`p-4 rounded-lg border transition-all ${
                selectedPrinciple === principle.id
                  ? 'bg-green-900/30 border-green-500/50'
                  : 'bg-slate-700 border-slate-600 hover:border-green-500/30'
              }`}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
            >
              <div className="flex justify-center mb-2 text-green-400">
                {principle.icon}
              </div>
              <div className="text-sm font-medium">{principle.name}</div>
            </motion.button>
          ))}
        </div>

        <AnimatePresence mode="wait">
          {selectedPrinciple && (
            <motion.div
              key={selectedPrinciple}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -20 }}
              className="bg-slate-700/50 rounded-lg p-4"
            >
              {(() => {
                const principle = principles.find(p => p.id === selectedPrinciple);
                return (
                  <>
                    <p className="text-sm text-slate-300 mb-4">
                      {principle?.description}
                    </p>
                    <div className="bg-slate-900 rounded-lg overflow-hidden">
                      {principle?.demo()}
                    </div>
                  </>
                );
              })()}
            </motion.div>
          )}
        </AnimatePresence>

        <div className="mt-6 p-4 bg-green-900/20 rounded-lg border border-green-500/20">
          <p className="text-sm text-green-300">
            <span className="font-semibold">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ:</span> –≠—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç–∞—é—Ç –≤ –ª—é–±–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ 
            –∏ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —á–µ—Ä–µ–∑ 10, 20 –∏ –¥–∞–∂–µ 50 –ª–µ—Ç.
          </p>
        </div>
      </div>
    );
  };

  // –î–µ–º–æ: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å
  const MentalModelDemo = () => {
    const [currentStep, setCurrentStep] = useState(0);
    const [selectedApproach, setSelectedApproach] = useState<'wrong' | 'right' | null>(null);

    const wrongApproach = [
      { step: '–û—Ç–∫—Ä—ã–≤–∞—é After Effects', icon: 'üñ•Ô∏è', time: '0 —Å–µ–∫' },
      { step: '–ò—â—É –∫—Ä—É—Ç–æ–π –ø–ª–∞–≥–∏–Ω', icon: 'üîç', time: '5 –º–∏–Ω' },
      { step: '–ü—Ä–æ–±—É—é —Ä–∞–∑–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã', icon: '‚ú®', time: '30 –º–∏–Ω' },
      { step: '–ß—Ç–æ-—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å!', icon: 'üéØ', time: '2 —á–∞—Å–∞' },
      { step: '–ù–æ –∑–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ?', icon: 'üòï', time: '‚àû' }
    ];

    const rightApproach = [
      { step: '–û–ø—Ä–µ–¥–µ–ª—è—é —Ü–µ–ª—å', icon: 'üéØ', time: '5 –º–∏–Ω' },
      { step: '–°–∫–µ—Ç—á–∏—Ä—É—é –∏–¥–µ—é', icon: '‚úèÔ∏è', time: '10 –º–∏–Ω' },
      { step: '–í—ã–±–∏—Ä–∞—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç', icon: 'üîß', time: '2 –º–∏–Ω' },
      { step: '–†–µ–∞–ª–∏–∑—É—é —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º', icon: 'üí°', time: '30 –º–∏–Ω' },
      { step: '–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–µ—à–∞–µ—Ç –∑–∞–¥–∞—á—É', icon: '‚úÖ', time: '–ì–æ—Ç–æ–≤–æ!' }
    ];

    const steps = selectedApproach === 'wrong' ? wrongApproach : rightApproach;

    useEffect(() => {
      if (selectedApproach) {
        const interval = setInterval(() => {
          setCurrentStep(prev => (prev + 1) % steps.length);
        }, 2000);
        return () => clearInterval(interval);
      }
    }, [selectedApproach, steps.length]);

    return (
      <div className="bg-slate-800 rounded-lg p-6">
        <h3 className="text-xl font-semibold text-blue-400 mb-4 flex items-center gap-2">
          <Icon icon="ph:target" className="w-5 h-5" />
          –ú–µ–Ω—Ç–∞–ª—å–Ω–∞—è –ú–æ–¥–µ–ª—å
        </h3>

        <div className="grid grid-cols-2 gap-4 mb-6">
          <motion.button
            onClick={() => {
              setSelectedApproach('wrong');
              setCurrentStep(0);
            }}
            className={`p-4 rounded-lg border transition-all ${
              selectedApproach === 'wrong'
                ? 'bg-red-900/20 border-red-500/50'
                : 'bg-slate-700 border-slate-600 hover:border-red-500/30'
            }`}
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
          >
            <Icon icon="ph:x-circle" className="w-6 h-6 text-red-400 mx-auto mb-2" />
            <div className="font-medium">–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥</div>
            <div className="text-sm text-slate-400 mt-1">–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç ‚Üí –ò–¥–µ—è</div>
          </motion.button>

          <motion.button
            onClick={() => {
              setSelectedApproach('right');
              setCurrentStep(0);
            }}
            className={`p-4 rounded-lg border transition-all ${
              selectedApproach === 'right'
                ? 'bg-green-900/20 border-green-500/50'
                : 'bg-slate-700 border-slate-600 hover:border-green-500/30'
            }`}
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
          >
            <Icon icon="ph:check-circle" className="w-6 h-6 text-green-400 mx-auto mb-2" />
            <div className="font-medium">–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥</div>
            <div className="text-sm text-slate-400 mt-1">–ò–¥–µ—è ‚Üí –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç</div>
          </motion.button>
        </div>

        <AnimatePresence mode="wait">
          {selectedApproach && (
            <motion.div
              key={selectedApproach}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="space-y-3"
            >
              {steps.map((step, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0.3, x: -20 }}
                  animate={{ 
                    opacity: index <= currentStep ? 1 : 0.3,
                    x: index === currentStep ? 0 : -20,
                    scale: index === currentStep ? 1.05 : 1
                  }}
                  className={`flex items-center gap-4 p-3 rounded-lg ${
                    index === currentStep 
                      ? selectedApproach === 'wrong' 
                        ? 'bg-red-900/20 border border-red-500/30' 
                        : 'bg-green-900/20 border border-green-500/30'
                      : 'bg-slate-700/50'
                  }`}
                >
                  <div className="text-2xl">{step.icon}</div>
                  <div className="flex-1">
                    <div className="font-medium">{step.step}</div>
                    <div className="text-sm text-slate-400">{step.time}</div>
                  </div>
                  {index === currentStep && (
                    <motion.div
                      className={`w-2 h-2 rounded-full ${
                        selectedApproach === 'wrong' ? 'bg-red-400' : 'bg-green-400'
                      }`}
                      animate={{ scale: [1, 1.5, 1] }}
                      transition={{ repeat: Infinity, duration: 1 }}
                    />
                  )}
                </motion.div>
              ))}
            </motion.div>
          )}
        </AnimatePresence>

        {selectedApproach && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className={`mt-4 p-3 rounded-lg ${
              selectedApproach === 'wrong'
                ? 'bg-red-900/20 border border-red-500/20'
                : 'bg-green-900/20 border border-green-500/20'
            }`}
          >
            <p className="text-sm">
              {selectedApproach === 'wrong' ? (
                <span className="text-red-300">
                  –ù–∞—á–∏–Ω–∞–µ—Ç–µ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏ –∏—â–µ—Ç–µ, —á—Ç–æ —Å –Ω–∏–º —Å–¥–µ–ª–∞—Ç—å. 
                  –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–ª—É—á–∞–µ–Ω –∏ —á–∞—Å—Ç–æ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω.
                </span>
              ) : (
                <span className="text-green-300">
                  –ù–∞—á–∏–Ω–∞–µ—Ç–µ —Å –ø–æ–Ω–∏–º–∞–Ω–∏—è –∑–∞–¥–∞—á–∏. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç ‚Äî –ª–∏—à—å —Å—Ä–µ–¥—Å—Ç–≤–æ 
                  –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ü–µ–ª–∏.
                </span>
              )}
            </p>
          </motion.div>
        )}
      </div>
    );
  };

  // –î–µ–º–æ: 80/20 –ø—Ä–∏–Ω—Ü–∏–ø
  const TimeInvestmentDemo = () => {
    const [timeAllocation, setTimeAllocation] = useState({ tools: 80, fundamentals: 20 });
    const [results, setResults] = useState({ shortTerm: 80, longTerm: 20 });

    const updateAllocation = (toolsPercent: number) => {
      const fundamentalsPercent = 100 - toolsPercent;
      setTimeAllocation({ tools: toolsPercent, fundamentals: fundamentalsPercent });
      
      // –†–∞—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      const shortTermResult = toolsPercent * 0.8 + fundamentalsPercent * 0.3;
      const longTermResult = toolsPercent * 0.2 + fundamentalsPercent * 1.5;
      
      setResults({
        shortTerm: Math.min(shortTermResult, 100),
        longTerm: Math.min(longTermResult, 100)
      });
    };

    return (
      <div className="bg-slate-800 rounded-lg p-6">
        <h3 className="text-xl font-semibold text-purple-400 mb-4 flex items-center gap-2">
          <Icon icon="ph:clock" className="w-5 h-5" />
          –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –í—Ä–µ–º–µ–Ω–∏: 80/20
        </h3>

        <div className="mb-6">
          <label className="block text-sm font-medium mb-2">
            –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–±—É—á–µ–Ω–∏—è
          </label>
          <input
            type="range"
            min="0"
            max="100"
            value={timeAllocation.tools}
            onChange={(e) => updateAllocation(Number(e.target.value))}
            className="w-full"
          />
          <div className="flex justify-between text-sm mt-2">
            <span className="text-yellow-400">
              –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: {timeAllocation.tools}%
            </span>
            <span className="text-blue-400">
              –ü—Ä–∏–Ω—Ü–∏–ø—ã: {timeAllocation.fundamentals}%
            </span>
          </div>
        </div>

        <div className="grid grid-cols-2 gap-4 mb-6">
          <div className="bg-slate-700/50 rounded-lg p-4">
            <div className="flex items-center gap-2 mb-3">
              <Icon icon="ph:lightning" className="w-4 h-4 text-yellow-400" />
              <span className="font-medium">–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</span>
            </div>
            <div className="relative h-32">
              <motion.div
                className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-yellow-500 to-yellow-400 rounded"
                initial={{ height: 0 }}
                animate={{ height: `${results.shortTerm}%` }}
                transition={{ type: 'spring', damping: 20 }}
              />
              <div className="absolute bottom-2 left-0 right-0 text-center text-sm font-bold">
                {Math.round(results.shortTerm)}%
              </div>
            </div>
          </div>

          <div className="bg-slate-700/50 rounded-lg p-4">
            <div className="flex items-center gap-2 mb-3">
              <Icon icon="ph:trend-up" className="w-4 h-4 text-blue-400" />
              <span className="font-medium">–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</span>
            </div>
            <div className="relative h-32">
              <motion.div
                className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-blue-500 to-blue-400 rounded"
                initial={{ height: 0 }}
                animate={{ height: `${results.longTerm}%` }}
                transition={{ type: 'spring', damping: 20 }}
              />
              <div className="absolute bottom-2 left-0 right-0 text-center text-sm font-bold">
                {Math.round(results.longTerm)}%
              </div>
            </div>
          </div>
        </div>

        <div className={`p-4 rounded-lg border ${
          timeAllocation.fundamentals >= 60 
            ? 'bg-green-900/20 border-green-500/20' 
            : timeAllocation.fundamentals >= 30
            ? 'bg-yellow-900/20 border-yellow-500/20'
            : 'bg-red-900/20 border-red-500/20'
        }`}>
          <p className="text-sm">
            {timeAllocation.fundamentals >= 60 ? (
              <span className="text-green-300">
                <strong>–û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å!</strong> –§–æ–∫—É—Å –Ω–∞ –ø—Ä–∏–Ω—Ü–∏–ø–∞—Ö –¥–∞—Å—Ç 
                —É—Å—Ç–æ–π—á–∏–≤—ã–π –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π —Ä–æ—Å—Ç.
              </span>
            ) : timeAllocation.fundamentals >= 30 ? (
              <span className="text-yellow-300">
                <strong>–ù–µ–ø–ª–æ—Ö–æ.</strong> –ù–æ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–∏–Ω—Ü–∏–ø—ã 
                —É–ª—É—á—à–∏—Ç –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
              </span>
            ) : (
              <span className="text-red-300">
                <strong>–¢–∏–ø–∏—á–Ω–∞—è –æ—à–∏–±–∫–∞.</strong> –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã 
                –¥–∞–µ—Ç –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç, –Ω–æ —Å–ª–∞–±—ã–π –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π —Ä–æ—Å—Ç.
              </span>
            )}
          </p>
        </div>

        <div className="mt-4 p-3 bg-purple-900/20 rounded-lg border border-purple-500/20">
          <p className="text-sm text-purple-300">
            <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> 80% –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≤–µ—á–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã, 
            20% –Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.
          </p>
        </div>
      </div>
    );
  };

  return (
    <div className="prose prose-invert max-w-none">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
      >
        <h1 className="text-4xl font-bold mb-8 bg-gradient-to-r from-yellow-400 via-purple-400 to-blue-400 bg-clip-text text-transparent">
          –ú–æ–¥—É–ª—å 16: –í–µ—á–Ω—ã–π –°–ø–æ—Ä ‚Äî –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø—Ä–æ—Ç–∏–≤ –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞
        </h1>

        <div className="bg-slate-800/50 rounded-lg p-6 mb-8 border border-slate-700">
          <p className="text-lg leading-relaxed mb-4">
            –û–∫–µ–π, –∫–æ–º–∞–Ω–¥–∞. –î–∞–≤–∞–π—Ç–µ –ø–æ–≥–æ–≤–æ—Ä–∏–º –Ω–∞—á–∏—Å—Ç–æ—Ç—É –æ —Ç–æ–º, —á—Ç–æ –º—ã –≤–∏–¥–∏–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. 
            –†–µ–∫–ª–∞–º–∞ –∫—É—Ä—Å–æ–≤ –∫—Ä–∏—á–∏—Ç: "–û—Å–≤–æ–π After Effects –∑–∞ 30 –¥–Ω–µ–π –∏ —Å—Ç–∞–Ω—å –º–æ—É—à–Ω-–¥–∏–∑–∞–π–Ω–µ—Ä–æ–º!". 
            –§–æ—Ä—É–º—ã –∑–∞–≤–∞–ª–µ–Ω—ã –≤–æ–ø—Ä–æ—Å–∞–º–∏: "–ß—Ç–æ –ª—É—á—à–µ —É—á–∏—Ç—å, Cinema 4D –∏–ª–∏ Blender?". 
            –ù–æ–≤–∏—á–∫–∏ —Å–∫–∞—á–∏–≤–∞—é—Ç –ø–ª–∞–≥–∏–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–µ—â–∞—é—Ç "—Å–æ–∑–¥–∞–≤–∞—Ç—å –≥–æ–ª–ª–∏–≤—É–¥—Å–∫—É—é –∞–Ω–∏–º–∞—Ü–∏—é –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π".
          </p>
          <p className="text-lg font-semibold text-yellow-400">
            –ò –≤—Å–µ —ç—Ç–æ —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–º –∏–∑ —Å–∞–º—ã—Ö –æ–ø–∞—Å–Ω—ã—Ö –º–∏—Ñ–æ–≤ –≤ –Ω–∞—à–µ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏.
          </p>
        </div>

        <div className="grid md:grid-cols-2 gap-6 mb-8">
          <motion.div
            className="bg-red-900/10 rounded-lg p-6 border border-red-500/30"
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.2 }}
          >
            <h3 className="text-xl font-semibold text-red-400 mb-3 flex items-center gap-2">
              <Icon icon="ph:x-circle" className="w-5 h-5" />
              –ò—Å—Ö–æ–¥–Ω–æ–µ –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ (–ú–∏—Ñ)
            </h3>
            <p className="text-slate-300">
              –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –≤ –º–æ—É—à–Ω-–¥–∏–∑–∞–π–Ω–µ –ø—Ä—è–º–æ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –æ—Å–≤–æ–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º 
              –∏ –ø–ª–∞–≥–∏–Ω–æ–≤. –ï—Å–ª–∏ —è –≤—ã—É—á—É –≤—Å–µ "–≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏" –∏ –∫—É–ø–ª—é –≤—Å–µ –Ω—É–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, 
              —è —Å—Ç–∞–Ω—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–º.
            </p>
          </motion.div>

          <motion.div
            className="bg-green-900/10 rounded-lg p-6 border border-green-500/30"
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.3 }}
          >
            <h3 className="text-xl font-semibold text-green-400 mb-3 flex items-center gap-2">
              <Icon icon="ph:check-circle" className="w-5 h-5" />
              –ù–æ–≤–∞—è –∏–¥–µ—è (–†–µ–∞–ª—å–Ω–æ—Å—Ç—å)
            </h3>
            <p className="text-slate-300">
              –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã ‚Äî —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –º–æ–ª–æ—Ç–æ–∫ –∏ –¥–æ–ª–æ—Ç–æ. –û–Ω–∏ –Ω–µ –¥–µ–ª–∞—é—Ç –≤–∞—Å —Å–∫—É–ª—å–ø—Ç–æ—Ä–æ–º. 
              –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ ‚Äî —ç—Ç–æ –Ω–µ –∑–Ω–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫. –≠—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ, –Ω–µ –∑–∞–≤–∏—Å—è—â–µ–µ –æ—Ç —Å–æ—Ñ—Ç–∞ 
              –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤: –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏, —Ç–∞–π–º–∏–Ω–≥–∞, –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è, —Ü–≤–µ—Ç–∞ –∏ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è.
            </p>
          </motion.div>
        </div>

        <ToolTrapDemo />

        <div className="my-8">
          <h2 className="text-2xl font-semibold mb-6">–ü–æ—á–µ–º—É –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã ‚Äî —ç—Ç–æ –õ–æ–≤—É—à–∫–∞ –¥–ª—è –ù–∞—á–∏–Ω–∞—é—â–∏—Ö</h2>
          
          <div className="space-y-4">
            <motion.div
              className="bg-slate-800/50 rounded-lg p-6 border-l-4 border-yellow-500"
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.4 }}
            >
              <h3 className="text-lg font-semibold text-yellow-400 mb-2 flex items-center gap-2">
                <Icon icon="ph:lightning" className="w-5 h-5" />
                1. –û–Ω–∏ —Å–æ–∑–¥–∞—é—Ç –∏–ª–ª—é–∑–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
              </h3>
              <p className="text-slate-300">
                –í—ã—É—á–∏—Ç—å –Ω–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç –∏–ª–∏ –ø–ª–∞–≥–∏–Ω –ª–µ–≥–∫–æ. –≠—Ç–æ –¥–∞–µ—Ç –±—ã—Å—Ç—Ä—ã–π "–¥–æ—Ñ–∞–º–∏–Ω–æ–≤—ã–π —É–∫–æ–ª" ‚Äî 
                "—Å–µ–≥–æ–¥–Ω—è —è –Ω–∞—É—á–∏–ª—Å—è –¥–µ–ª–∞—Ç—å –Ω–µ–æ–Ω–æ–≤–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ!". –í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ, —á—Ç–æ —Ä–∞—Å—Ç–µ—Ç–µ. 
                –ù–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –≤—ã –ø—Ä–æ—Å—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç–µ –º–æ–ª–æ—Ç–∫–∏, –≤—Å–µ –µ—â–µ –Ω–µ –ø–æ–Ω–∏–º–∞—è, 
                –∫–∞–∫ —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–º.
              </p>
            </motion.div>

            <motion.div
              className="bg-slate-800/50 rounded-lg p-6 border-l-4 border-orange-500"
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.5 }}
            >
              <h3 className="text-lg font-semibold text-orange-400 mb-2 flex items-center gap-2">
                <Icon icon="ph:arrows-clockwise" className="w-5 h-5" />
                2. –û–Ω–∏ –±—ã—Å—Ç—Ä–æ —É—Å—Ç–∞—Ä–µ–≤–∞—é—Ç
              </h3>
              <p className="text-slate-300">
                –ú–∏—Ä —Å–æ—Ñ—Ç–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å –±–µ—à–µ–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é. –ü—Ä–æ–≥—Ä–∞–º–º–∞, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º 
                –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ 5 –ª–µ—Ç –Ω–∞–∑–∞–¥ (–ø–æ–º–Ω–∏—Ç–µ Flash?), —Å–µ–≥–æ–¥–Ω—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ—á—Ç–∏ –∑–∞–±—ã—Ç–∞. 
                –ü–ª–∞–≥–∏–Ω—ã –ø–µ—Ä–µ—Å—Ç–∞—é—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è. –ï—Å–ª–∏ –≤–∞—à–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ –Ω–∞ –∑–Ω–∞–Ω–∏–∏ 
                –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞, –≤—ã —Ä–∏—Å–∫—É–µ—Ç–µ "—É—Å—Ç–∞—Ä–µ—Ç—å" –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º.
              </p>
            </motion.div>

            <motion.div
              className="bg-slate-800/50 rounded-lg p-6 border-l-4 border-red-500"
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.6 }}
            >
              <h3 className="text-lg font-semibold text-red-400 mb-2 flex items-center gap-2">
                <Icon icon="ph:warning-triangle" className="w-5 h-5" />
                3. –û–Ω–∏ –æ—Ç–≤–ª–µ–∫–∞—é—Ç –æ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ
              </h3>
              <p className="text-slate-300">
                –í—Ä–µ–º—è, –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ —Å–æ—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤ Cinema 4D, ‚Äî —ç—Ç–æ –≤—Ä–µ–º—è, 
                –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –Ω–µ –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ —Ç–µ–æ—Ä–∏–∏ —Ü–≤–µ—Ç–∞ –ø–æ –ò—Ç—Ç–µ–Ω—É, –Ω–∞ –∞–Ω–∞–ª–∏–∑ 
                —Ä–∞–±–æ—Ç –≤–µ–ª–∏–∫–∏—Ö —Ä–µ–∂–∏—Å—Å–µ—Ä–æ–≤, –Ω–∞ —á—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥ –æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∏–ª–∏ 
                –Ω–∞ –ø—Ä–æ—Å—Ç–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Ç–µ–º, –∫–∞–∫ –¥–≤–∏–∂—É—Ç—Å—è –æ–±—ä–µ–∫—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –º–∏—Ä–µ.
              </p>
            </motion.div>
          </div>
        </div>

        <FundamentalsDemo />

        <div className="my-8">
          <h2 className="text-2xl font-semibold mb-6">–ß—Ç–æ –¢–∞–∫–æ–µ –ù–∞—Å—Ç–æ—è—â–µ–µ –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ? –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –ü—Ä–∏–Ω—Ü–∏–ø—ã.</h2>
          
          <div className="bg-blue-900/10 rounded-lg p-6 border border-blue-500/30 mb-6">
            <p className="text-lg text-blue-300">
              –ù–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –≥–µ–Ω–∏–∞–ª—å–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É—è —Ç—Ä–∏ –ø—Ä–æ—Å—Ç—ã—Ö 
              –∫–≤–∞–¥—Ä–∞—Ç–∞ –≤ –ª—é–±–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ, –¥–∞–∂–µ –≤ PowerPoint. –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –æ–ø–µ—Ä–∏—Ä—É–µ—Ç –Ω–µ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏, 
              –∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–º–∏.
            </p>
          </div>

          <div className="grid md:grid-cols-2 gap-4">
            {[
              {
                title: '–ü–æ–Ω–∏–º–∞–Ω–∏–µ –¢–∞–π–º–∏–Ω–≥–∞ –∏ –°–ø–µ–π—Å–∏–Ω–≥–∞',
                description: '–ß—É–≤—Å—Ç–≤–æ —Ä–∏—Ç–º–∞. –ü–æ–Ω–∏–º–∞–Ω–∏–µ, –∫–∞–∫ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –¥–≤–∏–∂–µ–Ω–∏—è.',
                icon: <Icon icon="ph:timer" className="w-5 h-5" />
              },
              {
                title: '–ó–Ω–∞–Ω–∏–µ –ü—Ä–∏–Ω—Ü–∏–ø–æ–≤ –î–∏–∑–∞–π–Ω–∞',
                description: '–ö–æ–º–ø–æ–∑–∏—Ü–∏—è, –∏–µ—Ä–∞—Ä—Ö–∏—è, –∫–æ–Ω—Ç—Ä–∞—Å—Ç, –±–∞–ª–∞–Ω—Å, —Ü–≤–µ—Ç. –ö–∞–∫ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –≤–∑–≥–ª—è–¥ –∑—Ä–∏—Ç–µ–ª—è?',
                icon: <Icon icon="ph:palette" className="w-5 h-5" />
              },
              {
                title: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –í–æ—Å–ø—Ä–∏—è—Ç–∏—è',
                description: '–ü–æ—á–µ–º—É ease-out –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ "–ø—Ä–∏–±—ã—Ç–∏–µ"? –ö–∞–∫ —Ü–≤–µ—Ç –≤–ª–∏—è–µ—Ç –Ω–∞ —ç–º–æ—Ü–∏–∏?',
                icon: <Icon icon="ph:brain" className="w-5 h-5" />
              },
              {
                title: '–ù–∞–≤—ã–∫–∏ –ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è',
                description: '–ö–∞–∫ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é? –ß—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–µ—Ö–∞–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞?',
                icon: <Icon icon="ph:book-open" className="w-5 h-5" />
              },
              {
                title: '–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
                description: '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —á–∞—Å–∞–º–∏ –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ —Ä–µ–∞–ª—å–Ω—ã–º –º–∏—Ä–æ–º. –ö–∞–∫ –∫–∞–ø–ª—è –ø–∞–¥–∞–µ—Ç –≤ –≤–æ–¥—É?',
                icon: <Icon icon="ph:eye" className="w-5 h-5" />
              },
              {
                title: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –ú—ã—à–ª–µ–Ω–∏–µ',
                description: '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É, –∑–∞–¥–∞–≤–∞—è –≤–æ–ø—Ä–æ—Å "–ø–æ—á–µ–º—É?"',
                icon: <Icon icon="ph:lightbulb" className="w-5 h-5" />
              }
            ].map((principle, index) => (
              <motion.div
                key={principle.title}
                className="bg-slate-800/50 rounded-lg p-4 border border-slate-700"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.7 + index * 0.1 }}
              >
                <h4 className="font-semibold mb-2 flex items-center gap-2 text-blue-400">
                  {principle.icon}
                  {principle.title}
                </h4>
                <p className="text-sm text-slate-300">{principle.description}</p>
              </motion.div>
            ))}
          </div>
        </div>

        <MentalModelDemo />

        <div className="my-8">
          <h2 className="text-2xl font-semibold mb-6">–ö–∞–∫ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –û—Ç–Ω–æ—Å–∏—Ç—å—Å—è –∫ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º</h2>
          
          <div className="bg-slate-800/50 rounded-lg p-6 mb-6">
            <p className="text-lg mb-4">
              –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤–∞–∂–Ω—ã. –ì–ª—É–ø–æ —ç—Ç–æ –æ—Ç—Ä–∏—Ü–∞—Ç—å. –ù–æ –æ–Ω–∏ ‚Äî –≤—Ç–æ—Ä–∏—á–Ω—ã. 
              –û–Ω–∏ ‚Äî –ª–∏—à—å —Å–ø–æ—Å–æ–± —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –∑–∞–º—ã—Å–ª–∞.
            </p>
            
            <div className="space-y-4">
              <div className="flex items-start gap-4">
                <div className="w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center flex-shrink-0 mt-1">
                  <span className="text-sm font-bold">1</span>
                </div>
                <div>
                  <h4 className="font-semibold text-blue-400 mb-1">–°–Ω–∞—á–∞–ª–∞ ‚Äî –ò–î–ï–Ø</h4>
                  <p className="text-sm text-slate-300">
                    –ß—Ç–æ —è —Ö–æ—á—É —Å–∫–∞–∑–∞—Ç—å? –ö–∞–∫—É—é —ç–º–æ—Ü–∏—é –≤—ã–∑–≤–∞—Ç—å? –ö–∞–∫—É—é –∑–∞–¥–∞—á—É —Ä–µ—à–∏—Ç—å? 
                    –≠—Ç–∞ —Ä–∞–±–æ—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É –≤–∞—Å –≤ –≥–æ–ª–æ–≤–µ, –Ω–∞ –±—É–º–∞–≥–µ, –≤ –±–ª–æ–∫–Ω–æ—Ç–µ.
                  </p>
                </div>
              </div>

              <div className="flex items-start gap-4">
                <div className="w-8 h-8 rounded-full bg-purple-500 flex items-center justify-center flex-shrink-0 mt-1">
                  <span className="text-sm font-bold">2</span>
                </div>
                <div>
                  <h4 className="font-semibold text-purple-400 mb-1">–ó–∞—Ç–µ–º ‚Äî –í–´–ë–û–† –ò–ù–°–¢–†–£–ú–ï–ù–¢–ê</h4>
                  <p className="text-sm text-slate-300 mb-2">
                    –ö–∞–∫–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–∑–≤–æ–ª–∏—Ç –º–Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç—Ç—É –∏–¥–µ—é –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ?
                  </p>
                  <div className="space-y-2 ml-4">
                    <div className="flex items-center gap-2 text-sm">
                      <Icon icon="ph:gear" className="w-4 h-4 text-slate-500" />
                      <span>–ù—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–∏–ø–æ—Ç–µ–∑—É? ‚Üí Figma –∏–ª–∏ Keynote</span>
                    </div>
                    <div className="flex items-center gap-2 text-sm">
                      <Icon icon="ph:pen" className="w-4 h-4 text-slate-500" />
                      <span>–ù—É–∂–Ω–∞ —Å–ª–æ–∂–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è? ‚Üí After Effects —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏</span>
                    </div>
                    <div className="flex items-center gap-2 text-sm">
                      <Icon icon="ph:code" className="w-4 h-4 text-slate-500" />
                      <span>–ù—É–∂–Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è? ‚Üí JS, Processing –∏–ª–∏ Unity</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-gradient-to-r from-purple-900/20 to-blue-900/20 rounded-lg p-6 border border-purple-500/30">
            <p className="text-lg font-semibold text-purple-300">
              –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª –≤—ã–±–∏—Ä–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–¥ –∑–∞–¥–∞—á—É. 
              –ù–æ–≤–∏—á–æ–∫ –∏—â–µ—Ç –∑–∞–¥–∞—á—É, –∫ –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ª—é–±–∏–º—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç.
            </p>
          </div>
        </div>

        <TimeInvestmentDemo />

        <div className="mt-8 bg-gradient-to-r from-blue-900/20 to-purple-900/20 rounded-lg p-8 border border-blue-500/30">
          <h2 className="text-2xl font-semibold mb-6 text-blue-400">
            –í–µ—Ä–¥–∏–∫—Ç: –í–∞—à–∞ –ù–æ–≤–∞—è –ú–µ–Ω—Ç–∞–ª—å–Ω–∞—è –ú–æ–¥–µ–ª—å
          </h2>
          
          <div className="bg-slate-800/50 rounded-lg p-6 mb-6">
            <p className="text-lg font-semibold text-purple-300 mb-4">
              –ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ 80% –≤—Ä–µ–º–µ–Ω–∏ –≤ –∏–∑—É—á–µ–Ω–∏–µ –≤–µ—á–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –∏ 20% ‚Äî –≤ –∏–∑—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.
            </p>
            
            <p className="text-lg mb-4">–ü–µ—Ä–µ—Å—Ç–∞–Ω—å—Ç–µ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å "–ö–∞–∫–æ–π —Å–æ—Ñ—Ç –º–Ω–µ –≤—ã—É—á–∏—Ç—å?". –ù–∞—á–Ω–∏—Ç–µ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å:</p>
            
            <ul className="space-y-2 ml-6">
              <li className="flex items-center gap-2">
                <Icon icon="ph:book-open" className="w-4 h-4 text-blue-400" />
                <span>"–ö–∞–∫—É—é –∫–Ω–∏–≥—É –ø–æ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –º–Ω–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å?"</span>
              </li>
              <li className="flex items-center gap-2">
                <Icon icon="ph:eye" className="w-4 h-4 text-purple-400" />
                <span>"–ö–∞–∫–æ–π —Ñ–∏–ª—å–º –º–Ω–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ–±—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ —Ä–∏—Ç–º?"</span>
              </li>
              <li className="flex items-center gap-2">
                <Icon icon="ph:brain" className="w-4 h-4 text-green-400" />
                <span>"–ö–∞–∫ –º–Ω–µ –Ω–∞—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å?"</span>
              </li>
            </ul>
          </div>

          <motion.div
            className="bg-gradient-to-r from-yellow-900/20 to-orange-900/20 rounded-lg p-6 border border-yellow-500/30"
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 1 }}
          >
            <p className="text-lg text-yellow-300 font-medium">
              –ó–Ω–∞–Ω–∏–µ After Effects —Å–¥–µ–ª–∞–µ—Ç –≤–∞—Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º After Effects. 
              –ó–Ω–∞–Ω–∏–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏, —Ç–∞–π–º–∏–Ω–≥–∞ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ —Å–¥–µ–ª–∞–µ—Ç –≤–∞—Å –ú–æ—É—à–Ω-–¥–∏–∑–∞–π–Ω–µ—Ä–æ–º. 
              –ü–µ—Ä–≤–æ–µ –æ–±–µ—Å—Ü–µ–Ω–∏—Ç—Å—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–µ–π —Å–æ—Ñ—Ç–∞. 
              –í—Ç–æ—Ä–æ–µ ‚Äî –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Å –≤–∞–º–∏ –Ω–∞–≤—Å–µ–≥–¥–∞ –∏ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –¥–æ—Ä–æ–∂–∞—Ç—å.
            </p>
          </motion.div>
        </div>
      </motion.div>
    </div>
  );
};

export default ToolsVsMastery;